<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wchen</title>
  
  <subtitle>世界很大，总想出去走走</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wchen.club/"/>
  <updated>2020-05-21T11:37:34.605Z</updated>
  <id>https://www.wchen.club/</id>
  
  <author>
    <name>wchen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VMware网络配置</title>
    <link href="https://www.wchen.club/2469974346.html"/>
    <id>https://www.wchen.club/2469974346.html</id>
    <published>2020-05-21T11:14:59.000Z</published>
    <updated>2020-05-21T11:37:34.605Z</updated>
    
    <content type="html"><![CDATA[<p>VMware网络模式有桥接模式、NAT模式和仅主机模式，不同的模式对应的功能有所不同， 联网方式也有所不同。 </p><blockquote><p>桥接模式： 物理机和虚拟机属于同一个局域网<br>NAT模式： 物理机充当虚拟机的路由<br>仅主机模式： 物理机和虚拟机直连<br>虚拟网卡:  用于与物理机之间的通信<br>仅主机模式： Vmware Network Adapter VMnet1<br>NAT模式： Vmware Network Adapter VMnet8</p></blockquote><a id="more"></a><style>     img {        width: 100%;    }</style><h1 id="模式图解"><a href="#模式图解" class="headerlink" title="模式图解"></a>模式图解</h1><h2 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h2><p><img src="/2469974346/2.png" alt></p><h2 id="NAT模式"><a href="#NAT模式" class="headerlink" title="NAT模式"></a>NAT模式</h2><p><img src="/2469974346/3.png" alt></p><blockquote><p>Vmware Network Adapter VMnet8的作用： 主机与虚拟机之间的通信， 如果禁用不会影响虚拟机联网， 但是主机无法与虚拟机之间进行通信。 Vmware Network Adapter VMnet8是要和虚拟机同一个网段， 不然找不到虚拟机网段。</p></blockquote><h2 id="仅主机模式"><a href="#仅主机模式" class="headerlink" title="仅主机模式"></a>仅主机模式</h2><p><img src="/2469974346/4.png" alt></p><h1 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h1><h2 id="本机网络配置"><a href="#本机网络配置" class="headerlink" title="本机网络配置"></a>本机网络配置</h2><blockquote><p>控制面板\网络和 Internet\网络连接</p></blockquote><p><img src="/2469974346/5.png" alt></p><h2 id="网络模式选择"><a href="#网络模式选择" class="headerlink" title="网络模式选择"></a>网络模式选择</h2><p>vmware软件/虚拟机/设置/网络适配器<br><img src="/2469974346/6.png" alt></p><h2 id="虚拟网络编辑器"><a href="#虚拟网络编辑器" class="headerlink" title="虚拟网络编辑器"></a>虚拟网络编辑器</h2><blockquote><p>vmware软件/虚拟网络编辑器</p></blockquote><p><img src="/2469974346/7.png" alt></p><h2 id="虚拟机网卡信息"><a href="#虚拟机网卡信息" class="headerlink" title="虚拟机网卡信息"></a>虚拟机网卡信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">TYPE=Ethernet  <span class="comment"># 网卡类型</span></span><br><span class="line">PROXY_METHOD=“none” <span class="comment"># 代理方式，默认为关闭状态</span></span><br><span class="line">BROWSER_ONLY=“no” <span class="comment"># 只是浏览器</span></span><br><span class="line">BOOTPROTO=”dhcp“ <span class="comment"># 网卡引导协议</span></span><br><span class="line">DEFAULT=“no”  <span class="comment"># 默认路由</span></span><br><span class="line">IPV4_FAILURE=“no” <span class="comment"># 是不是开启IPV4致命检测</span></span><br><span class="line">IPV6INIT=<span class="string">"YES"</span> <span class="comment"># IPV6初始化</span></span><br><span class="line">IPV6_AUTOCONF=“yes”  <span class="comment">#IPV6是否自动配置</span></span><br><span class="line">IPV6_DEFAULT=”YES“  <span class="comment">#IPV6是否为默认路由</span></span><br><span class="line">IPV6_FAILURE_FATAL=“no” <span class="comment"># 是不是开启IPV6知名错误</span></span><br><span class="line">NAME=“ens33“  <span class="comment"># 物理网卡名称</span></span><br><span class="line">UUID  <span class="comment"># 通用唯一标识码</span></span><br><span class="line">DEVICE=”ens33“  <span class="comment"># 网卡设备名称，必须和NAME一致</span></span><br><span class="line">ONBOOT=“yes”  是否开机启动，是否能通过systemctl start network启动</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">联网测试   ping 8.8.8.8 -c 4</span><br><span class="line">域名服务   ping www.baidu.com -c 4</span><br><span class="line">重启网络   systemctl restart network</span><br></pre></td></tr></table></figure><h1 id="联网设置"><a href="#联网设置" class="headerlink" title="联网设置"></a>联网设置</h1><h2 id="桥接模式-1"><a href="#桥接模式-1" class="headerlink" title="桥接模式"></a>桥接模式</h2><blockquote><p>网络模式选择 -&gt; 编辑/虚拟网络编辑器/桥接模式/桥接至联网网卡</p></blockquote><p><img src="/2469974346/8.png" alt></p><blockquote><p>注意如果桥接网络选项没有需要的网络适配器， 需要对该网络适配器的属性中勾选 Vmware Bridge Protocol 之后重新选择</p></blockquote><h3 id="虚拟机网卡"><a href="#虚拟机网卡" class="headerlink" title="虚拟机网卡"></a>虚拟机网卡</h3><p><img src="/2469974346/9.png" alt></p><h3 id="路由器信息"><a href="#路由器信息" class="headerlink" title="路由器信息"></a>路由器信息</h3><p><img src="/2469974346/10.png" alt></p><blockquote><p>注意 无线网络路由器中没有虚拟机IP的信息</p></blockquote><h2 id="NAT模式-1"><a href="#NAT模式-1" class="headerlink" title="NAT模式"></a>NAT模式</h2><blockquote><p>网络模式选择 -&gt; 编辑/虚拟网络编辑器</p></blockquote><p><img src="/2469974346/11.png" alt><br><img src="/2469974346/12.png" alt></p><h3 id="虚拟机静态IP设置"><a href="#虚拟机静态IP设置" class="headerlink" title="虚拟机静态IP设置"></a>虚拟机静态IP设置</h3><p><img src="/2469974346/14.png" alt></p><h2 id="仅主机模式-1"><a href="#仅主机模式-1" class="headerlink" title="仅主机模式"></a>仅主机模式</h2><blockquote><p>仅主机模式和NAT模式类似， 没有NAT设备， 网络通过共享主机网络。</p></blockquote><p><img src="/2469974346/15.png" alt><br><img src="/2469974346/16.png" alt></p><h1 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h1><blockquote><p>由于本人使用的是终端模式，没有使用可视化界面，让界面看着很难受。所以配置了一下ssh，使<br>用其他的ssh终端来减轻自己的痛苦。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep openssh   <span class="comment"># 查看是否安装openssh</span></span><br><span class="line">netstat -ant | grep 22    <span class="comment"># 查看服务是否启动</span></span><br><span class="line">yum install -y openssh    <span class="comment"># 安装openssh</span></span><br><span class="line">systemctl restart sshd    <span class="comment"># 启动ssh服务</span></span><br></pre></td></tr></table></figure><p>总结</p><blockquote><p>对于这篇文章对于我来说感触颇多， 在测试仅主机模式的时候， 虚拟机一直无法连接外网虚拟机重装了三四次！ 问题非常奇怪， 主机能ping通虚拟机， 虚拟机能ping同网关，网络共享正常。 感觉一切都很ok。 配置文件我一项一项地对照其他博文不停的修修改改，每一项都改了七八遍左右，网络一直不通。 很难受， 最后神奇的事情发生了，我的网络突然能连接外网了, 哎…..</p></blockquote><p>参考文献</p><blockquote><p><a href="https://www.xinruiyun.cn/nat/1753.html" target="_blank" rel="noopener">https://www.xinruiyun.cn/nat/1753.html</a><br><a href="https://blog.csdn.net/zhang_xinxiu/article/details/84404848" target="_blank" rel="noopener">https://blog.csdn.net/zhang_xinxiu/article/details/84404848</a><br><a href="https://blog.csdn.net/cckevincyh/article/details/80543510" target="_blank" rel="noopener">https://blog.csdn.net/cckevincyh/article/details/80543510</a><br><a href="https://www.cnblogs.com/fun0623/p/4744797.html" target="_blank" rel="noopener">https://www.cnblogs.com/fun0623/p/4744797.html</a><br><a href="https://blog.csdn.net/qq_41395106/article/details/89027987" target="_blank" rel="noopener">https://blog.csdn.net/qq_41395106/article/details/89027987</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VMware网络模式有桥接模式、NAT模式和仅主机模式，不同的模式对应的功能有所不同， 联网方式也有所不同。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;桥接模式： 物理机和虚拟机属于同一个局域网&lt;br&gt;NAT模式： 物理机充当虚拟机的路由&lt;br&gt;仅主机模式： 物理机和虚拟机直连&lt;br&gt;虚拟网卡:  用于与物理机之间的通信&lt;br&gt;仅主机模式： Vmware Network Adapter VMnet1&lt;br&gt;NAT模式： Vmware Network Adapter VMnet8&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="VM" scheme="https://www.wchen.club/categories/VM/"/>
    
    
      <category term="VMware" scheme="https://www.wchen.club/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>docker 开始</title>
    <link href="https://www.wchen.club/102226629.html"/>
    <id>https://www.wchen.club/102226629.html</id>
    <published>2020-05-14T04:21:36.000Z</published>
    <updated>2020-05-14T07:45:42.221Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>docker container 是一种内核虚拟化技术， 可以提供轻量级的虚拟化， 以便隔离进程和资源<br>docker是Paas提供商dotcould开源的一个基于LXC的高级容器引擎， 源代码托管在github上，基于go语言的并遵从Apache2.0开源协议<br>Docker设想是交互运行环境如同海运， OS如同一个货轮， 每一个在OS基础上的软件都如同一个集装箱， 用户可以通过标准换手段自由封装运行环境， 同时集装箱的内容可以由用户自定义， 也可以由专业人员制造。</p></blockquote><a id="more"></a><h1 id="初识Docker"><a href="#初识Docker" class="headerlink" title="初识Docker"></a>初识Docker</h1><h2 id="开发过程中的环境"><a href="#开发过程中的环境" class="headerlink" title="开发过程中的环境"></a>开发过程中的环境</h2><blockquote><p>开发环境    开发人员<br>测试环境    测试人员<br>生产环境    运维人员<br>代码”水土“不服，由于环境不同造成，docker使用容器的概念把环境和代码都进行打包。规避软件跨环境迁移问题</p></blockquote><p><img src="/102226629/1.png" alt="1.png"></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ol><li>Docker是一个开源的应用容器引擎</li><li>诞生于2013初，基于Go语言，dotCloud公司出品（后改名为Docker Inc）</li><li>Docker可以让开发这打包他们的引用以及依赖包到一个轻量级，可移植的容器中，然后发布到任何流行的Linux机器上。</li><li>容器时完全使用沙箱机制，相互隔离</li><li>容器性能开销极低</li></ol><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><blockquote><p>一键脚本： <a href="https://get.docker.com/" target="_blank" rel="noopener">https://get.docker.com/</a>   ||   <a href="https://test.docker.com/" target="_blank" rel="noopener">https://test.docker.com/</a><br>wget -O get-docker.sh  <a href="https://get.docker.com" target="_blank" rel="noopener">https://get.docker.com</a> &amp;&amp; sh get-docker.sh</p></blockquote><h2 id="Docker架构"><a href="#Docker架构" class="headerlink" title="Docker架构"></a>Docker架构</h2><!-- ![2.png](2.png) --><img src="/102226629/2.png" width="50%"><blockquote><p>镜像：(Image) Docker镜像（Image），相当于是一个root问及那系统，比如官方镜像ubuntu16.0.4就包含完整的ubuntu16.0.4的最小系统的root文件系统<br>容器：(container) 镜像和容器的关系就像镜像是静态当以而容器时镜像运行的实体，容器可以被创建、删除、停止、暂停、删除等<br>仓库：(respository)仓库可看成代码控制中心用来保存镜像</p></blockquote><h1 id="Docker命令操作"><a href="#Docker命令操作" class="headerlink" title="Docker命令操作"></a>Docker命令操作</h1><h2 id="守护进程"><a href="#守护进程" class="headerlink" title="守护进程"></a>守护进程</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker      <span class="comment"># 服务状态</span></span><br><span class="line">systemctl restart docker     <span class="comment"># 重启</span></span><br><span class="line">systemctl  start  docker     <span class="comment"># 开启</span></span><br><span class="line">systemctl stop docker        <span class="comment"># 停止</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker      <span class="comment"># 开机自启</span></span><br></pre></td></tr></table></figure><blockquote><p>注意： ubuntu可以使用systemctl或者使用service</p></blockquote><h2 id="镜像部分"><a href="#镜像部分" class="headerlink" title="镜像部分"></a>镜像部分</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker imges           <span class="comment"># 查看                      </span></span><br><span class="line">docker search  image   <span class="comment"># 搜索  </span></span><br><span class="line"><span class="comment"># 拉取</span></span><br><span class="line">docker pull image[:version]               </span><br><span class="line">    docker image centos:7</span><br><span class="line">    docker image mysql:5.7</span><br><span class="line">    docker image redis</span><br><span class="line"><span class="comment"># 删除  </span></span><br><span class="line">docker rmi image[:version]               </span><br><span class="line">   docker rmi mysql:5.7</span><br><span class="line">   docker rmi `docker image -aq`    <span class="comment"># 删除全部镜像</span></span><br></pre></td></tr></table></figure><h2 id="容器部分"><a href="#容器部分" class="headerlink" title="容器部分"></a>容器部分</h2><h3 id="查看容器状态"><a href="#查看容器状态" class="headerlink" title="查看容器状态"></a>查看容器状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数</span></span><br><span class="line">    <span class="comment"># -a: 显示所有的容器，包括未运行的。</span></span><br><span class="line">    <span class="comment"># -f: 根据条件过滤显示的内容。</span></span><br><span class="line">    <span class="comment"># --format: 指定返回值的模板文件。</span></span><br><span class="line">    <span class="comment"># -l: 显示最近创建的容器。</span></span><br><span class="line">    <span class="comment"># -n: 列出最近创建的n个容器</span></span><br><span class="line">    <span class="comment"># --no-trunc: 不截断输出</span></span><br><span class="line">    <span class="comment"># -q: 静默模式，只显示容器编号</span></span><br><span class="line">    <span class="comment"># -s: 显示总的文件大小</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h3 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数  </span></span><br><span class="line">    <span class="comment"># -i  : 以交互模式运行容器，通常与 -t 同时使用</span></span><br><span class="line">    <span class="comment"># -t : 为容器重新分配一个伪输入终端，通常与 -i 同时使用</span></span><br><span class="line">    <span class="comment"># -h "mars": 指定容器的hostname</span></span><br><span class="line">    <span class="comment"># --name=container_name:  为容器指定一个名称</span></span><br><span class="line">    <span class="comment"># --volume,-v: 绑定一个卷</span></span><br><span class="line">    <span class="comment"># -P: 随机端口映射，容器内部端口随机映射到主机的高端口</span></span><br><span class="line">    <span class="comment"># -p: 指定端口映射，格式为：主机(宿主)端口:容器端口</span></span><br><span class="line"><span class="comment"># 前台(前台需要分配终端，退出即停止)</span></span><br><span class="line">docker run -it --name=centos-docker -h centos-docker centos:7  /bin/bash  </span><br><span class="line">docker run -id --name=centos-docker -h centos-docker centos:7   <span class="comment"># 后台  </span></span><br><span class="line"><span class="comment"># 创建容器不运行</span></span><br><span class="line">docker create -i --name=centos-docker -h centos-docker centos:7</span><br></pre></td></tr></table></figure><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数</span></span><br><span class="line">    <span class="comment"># -d :分离模式: 在后台运行</span></span><br><span class="line">    <span class="comment"># -i :即使没有附加也保持STDIN 打开</span></span><br><span class="line">    <span class="comment"># -t :分配一个伪终端</span></span><br><span class="line">docker <span class="built_in">exec</span> -it container-name /bin/bash     </span><br><span class="line"><span class="built_in">exit</span>    <span class="comment"># 退出 </span></span><br><span class="line"><span class="comment"># 启动/停止/重启                   </span></span><br><span class="line">docker start/stop/restart container_name  </span><br><span class="line"><span class="comment"># 查看容器映射端口</span></span><br><span class="line">docker port container_name</span><br></pre></td></tr></table></figure><h3 id="容器提交生成镜像"><a href="#容器提交生成镜像" class="headerlink" title="容器提交生成镜像"></a>容器提交生成镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数</span></span><br><span class="line">    <span class="comment"># -a: 提交的镜像作者</span></span><br><span class="line">    <span class="comment"># -c: 使用Dockerfile指令来创建镜像</span></span><br><span class="line">    <span class="comment"># -m: 提交时的说明文字</span></span><br><span class="line">    <span class="comment"># -p: 在commit时，将容器暂停</span></span><br><span class="line">docker commit container_name</span><br></pre></td></tr></table></figure><h3 id="容器数据复制"><a href="#容器数据复制" class="headerlink" title="容器数据复制"></a>容器数据复制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp local_path container_name:PATH</span><br></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数</span></span><br><span class="line">    <span class="comment"># -f: 通过 SIGKILL 信号强制删除一个运行中的容器。</span></span><br><span class="line">    <span class="comment"># -l: 移除容器间的网络连接，而非容器本身。</span></span><br><span class="line">    <span class="comment"># -v: 删除与容器关联的卷。</span></span><br><span class="line">docker rm container_name  </span><br><span class="line">docker rm `docker ps -aq`  <span class="comment"># 删除全部</span></span><br></pre></td></tr></table></figure><h3 id="容器导出导入"><a href="#容器导出导入" class="headerlink" title="容器导出导入"></a>容器导出导入</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从容器中导出归档文件</span></span><br><span class="line">docker <span class="built_in">export</span> -o PATH/new_image.tar new_container</span><br><span class="line"><span class="comment"># 镜像的导入导出</span></span><br><span class="line">docker save -o PATH/new_image.tar new_container</span><br><span class="line">docker load -i PATH/new_image.tar new_image <span class="comment"># 结合save 使用</span></span><br></pre></td></tr></table></figure><h3 id="查看相关信息"><a href="#查看相关信息" class="headerlink" title="查看相关信息"></a>查看相关信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示 Docker 系统信息，包括镜像和容器数</span></span><br><span class="line">docker info </span><br><span class="line"><span class="comment"># 显示版本信息</span></span><br><span class="line">docker version</span><br><span class="line"><span class="comment"># 查看容器元数据信息</span></span><br><span class="line">docker inspect container_name</span><br></pre></td></tr></table></figure><h3 id="通过Dockerfile创建"><a href="#通过Dockerfile创建" class="headerlink" title="通过Dockerfile创建"></a>通过Dockerfile创建</h3><blockquote><p>会抽出单独一章节来讲</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 有语法错误时会返回</span></span><br><span class="line">docker build -t <span class="built_in">test</span>/myapp .</span><br><span class="line"><span class="comment"># 通过 -f Dockerfile 文件的位置</span></span><br><span class="line">docker build -f /path/to/a/Dockerfile .</span><br></pre></td></tr></table></figure><h2 id="数据卷部分"><a href="#数据卷部分" class="headerlink" title="数据卷部分"></a>数据卷部分</h2><p><img src="/102226629/6.png" alt="6.png"></p><blockquote><p>数据卷是宿主机文件，docker容器内文件挂载到宿主机目录下，实现数据之间的共享。可以通过不      同容器绑定同一个数据卷来实现容器的数据交换。</p></blockquote><h3 id="创建数据卷-只需创建实例添加-v命令"><a href="#创建数据卷-只需创建实例添加-v命令" class="headerlink" title="创建数据卷(只需创建实例添加-v命令)"></a>创建数据卷(只需创建实例添加-v命令)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name=c1 v:/root/data:/root/docker centos:7 /bin/bash</span><br></pre></td></tr></table></figure><h3 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据卷容器  </span></span><br><span class="line">docker run -it --name=c3  -v ~/data:/root/c3  centos:7 /bin/bash</span><br><span class="line"><span class="comment"># 创建c1、c2容器，通过--volumes-from设置数据卷</span></span><br><span class="line">docker run -it --name=c1 -volumes-from c3 centos:7 /bin/bash</span><br><span class="line">docker run -it --name=c2 -volumes-from c3 centos:7 /bin/bash</span><br></pre></td></tr></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p><a href="https://www.runoob.com/docker" target="_blank" rel="noopener">https://www.runoob.com/docker</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;docker container 是一种内核虚拟化技术， 可以提供轻量级的虚拟化， 以便隔离进程和资源&lt;br&gt;docker是Paas提供商dotcould开源的一个基于LXC的高级容器引擎， 源代码托管在github上，基于go语言的并遵从Apache2.0开源协议&lt;br&gt;Docker设想是交互运行环境如同海运， OS如同一个货轮， 每一个在OS基础上的软件都如同一个集装箱， 用户可以通过标准换手段自由封装运行环境， 同时集装箱的内容可以由用户自定义， 也可以由专业人员制造。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="CloudComputing" scheme="https://www.wchen.club/categories/CloudComputing/"/>
    
    
      <category term="docker" scheme="https://www.wchen.club/tags/docker/"/>
    
      <category term="cloud computing" scheme="https://www.wchen.club/tags/cloud-computing/"/>
    
      <category term="container" scheme="https://www.wchen.club/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>linux终端使用技巧</title>
    <link href="https://www.wchen.club/349378247.html"/>
    <id>https://www.wchen.club/349378247.html</id>
    <published>2020-05-14T00:26:13.000Z</published>
    <updated>2020-05-14T01:25:03.476Z</updated>
    
    <content type="html"><![CDATA[<p>对于终端输入的时候总会遇到一长串命令不方便修改; 命令记不全等问题， 以下内容可能让你感觉极度舒适&gt;&gt;&gt;</p><a id="more"></a><h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctrl a    <span class="comment"># 移动至命令开始</span></span><br><span class="line">ctrl e    <span class="comment"># 移动至命令结束</span></span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ctrl l    <span class="comment"># 清屏 和clear的功能一致</span></span><br><span class="line">ctrl u    <span class="comment"># 删除光标以前的所有字符</span></span><br><span class="line">ctrl k    <span class="comment"># 删除光标以后的所有字符</span></span><br><span class="line">ctrl w    <span class="comment"># 删除光标以前的一个单词</span></span><br></pre></td></tr></table></figure><h2 id="补全"><a href="#补全" class="headerlink" title="补全"></a>补全</h2><pre><code class="sh">tab       <span class="comment"># 自动补全</span>tab tab   <span class="comment"># 连续两下tab 查看以输入字符开始的所有命令</span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于终端输入的时候总会遇到一长串命令不方便修改; 命令记不全等问题， 以下内容可能让你感觉极度舒适&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://www.wchen.club/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.wchen.club/tags/linux/"/>
    
      <category term="terminal" scheme="https://www.wchen.club/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>openstack创建虚拟机流程</title>
    <link href="https://www.wchen.club/3642561074.html"/>
    <id>https://www.wchen.club/3642561074.html</id>
    <published>2020-05-11T05:55:07.000Z</published>
    <updated>2020-05-11T06:32:26.322Z</updated>
    
    <content type="html"><![CDATA[<style>     img {        width: 100%;    }</style><p>在初学openstack的时候， 总搞不懂openstack到底是干什么的？ 通过学习openstack创建虚拟机的流程， 意在了解虚拟机创建过程中各个组件之间的协调工作， 加深对openstack有清晰的结构。 该文章属于转载文章， 对其中一些不清楚的概念进行补充， 主要分为两部分， 第一部分创建虚拟机过程中的数据流向（整体架构），第二部分是虚拟机创建过程的各个部分的详细解说（部分架构）</p><a id="more"></a><h1 id="阶段解释"><a href="#阶段解释" class="headerlink" title="阶段解释"></a>阶段解释</h1><p><img src="/3642561074/1.png" alt="1.png"></p><ol><li>登录界面或命令通过RESTful API 向keystone获取认证信息</li><li>keystone通过用户的认证请求信息， 并生成auth-token返回给对应的认证请求</li><li>界面或命令行通过RESTful API向nova-api发送一个boot instance请求（携带auth-token）</li><li>nova-api接受请求后向keystone发送认证请求， 查看token是否为有效用户和token</li><li>keystone验证token是否有效，如有效则返回有效的认证的角色（注： 有些操    作需要角色权限才能操作）</li><li>认证通过后nova-api和数据库通讯</li><li>初始化新建虚拟机的数据库记录</li><li>nova-api通过rpc.call向nova-scheduler请求是否有创建虚拟机的资源（HOST ID）</li><li>nova-scheduler进程侦听消息队列， 获取nova-api的请求</li><li>nova-scheduler通过查询nova数据库中计算机资源情况， 并通过调度算法计算符合虚拟机创建需要的主机</li><li>对于符合虚拟机创建的主机， nova-scheduler更新数据库中虚拟机对应的物理主机信息</li><li>nova-scheduler通过rpc.cast向nova-compute发送对应的创建虚拟机请求信息</li><li>nova-compute会从对应的消息队列中获取创建虚拟机请求的消息。</li><li>nova-compute通过rpc.call向nova-conductor请求获取虚拟机信息（Flvor）</li><li>nova-conductor从消息队列中拿到nova-compute请求信息</li><li>nova-ocnductor根据信息查询虚拟机对应信息</li><li>nova-conductor从数据库中获取信息</li><li>nova-conductor吧虚拟机信息通过消息的方式发送给消息队列中</li><li>nova-compute从对应的消息队列中获取虚拟机信息消息。</li><li>nova-compute通过keysotne的RESTful API拿到认证的token， 并通过HTTP请求glance-api获取创建拟机所需的镜像</li><li>glance-api向keystone认证token是否有效， 并返回验证结果</li><li>token验证通过， nova-compute获取虚拟机镜像信息（URL）</li><li>nova-compute通过keystone的RESTful拿到验证的token， 并通过HTTP请去neutron-server获取创建拟机所需的网络信息</li><li>neutron-server向keystone认证token是否有效， 听返回验证结果</li><li>token验证通过后， nova-compute获取虚拟机网络信息</li><li>nova-compute通过keystone的RESTful API 拿到认证的token，并通过HTTP请求cinder-api获取创建拟机所需的持久化储存信息</li><li>cinder-api想keystone验证token是否有效， 并返回验证结果</li><li>token验证通过， nova-compute获取虚拟机持久化存储信息</li><li>nova-compute根据instace的信息调用配置虚拟化驱动来创建虚拟机</li></ol><p>注：</p><blockquote><ul><li>cast方式的远程调用，请求发送后就直接回了；call方式远程调用，需要等响应从服务返回 </li><li>nova-conductor 的作用是nova-compute和数据库之间建立桥梁， 提高全性</li><li>libvirt是用于管理kvm， quem， xen等提供的API</li></ul></blockquote><h1 id="部分架构"><a href="#部分架构" class="headerlink" title="部分架构"></a>部分架构</h1><h2 id="从novaclient到nova-api"><a href="#从novaclient到nova-api" class="headerlink" title="从novaclient到nova-api"></a>从novaclient到nova-api</h2><p>创建虚拟机一般是从界面或命令行发出请求开始的，两种方式都会借助novaclient向nova-api发出HTTP请求。nova-api暴露了一组RESTful的API，以接受novaclient发出的各种请求。创建虚拟机时需要向{your_compute_service_url}/servers发送POST请求。在使用命令行创建时可使用“–debug”选项来跟踪这些HTTP请求，如使用nova –debug boot。<br><img src="/3642561074/2.png" alt="2.png"></p><p>为了保证对OpenStack各个服务的安全访问，在请求创建虚拟机之前，novaclient会先向Keystone发送用户的用户名、密码、域名信息来申请一个有效的token，之后向nova-api发送请求的头部就会带有token信息。nova-api收到请求后会向Keystone验证token的有效性，token验证通过后，nova-api会向数据库写入虚拟机的初始数据。Keystone在验证token时，会先去缓存数据库memcached中查找，若缓存未命中再去数据库中的token表查找对应记录。由于OpenStack各个组件之间都需要token验证，并且token存在有效期，过期的token不会自动清理，所以随着时间的增长token表的记录会越来越多，那么在查询token表时就可能存在慢查询。除了使用memcached做缓存之外，我们还可以使用keystone-manage token_flush对token表做定期清理，避免数据库慢查询。</p><h2 id="从nova-api到nova-compute"><a href="#从nova-api到nova-compute" class="headerlink" title="从nova-api到nova-compute"></a>从nova-api到nova-compute</h2><p>nova-api工作结束后会向nova-conductor发起RPC请求，请求创建虚拟机。nova-conductor是nova-compute和数据库之间的桥梁，它可以防止nova-compute直接访问数据库，从而提高对数据库访问的安全性。随着nova-conductor功能的完善，它也接管了nova-compute中一些耗时较长的任务，如build_instances、resize_instance、live_migrate_instance等。<br><img src="/3642561074/3.png" alt="3.png"></p><p>nova-conductor收到请求后首先以rpc.call的方式请求nova-scheduler完成虚拟机创建的调度工作。nova-scheduler使用过滤和权重计算的方法来选定创建虚拟机的主机，过滤器和权重计算方法可以在nova.conf中配置。nova-scheduler自己会维护一份计算节点数据，并根数据库中对比。调度完成后将选定的host返回给nova-conductor，由nova-conductor向nova-compute发起rpc.cast的创建请求。<br>一般来说，OpenStack各个组件之间会通过RESTful API进行通信，而组件内部的各个服务进程之间则是通过基于AMPQ的RPC方式进行通信。RPC方式又分为两种，rpc.cast和rpc.call，rpc.call为request/response方式，多用于同步场景；而使用rpc.cast方式发出请求后则无需一直等待响应，但之后需要定期查询执行结果，一般用于异步场景。实现RPC通信还需借助消息队列，OpenStack将其使用的通信方式都封装在公有库oslo_messaging中，目前支持的消息队列包括Rabbitmq、Zeromq、Kafka等。<br>以nova-api和nova-conductor之间的通信为例。nova-conductor服务在启动时会注册一个RPC server等待处理请求，nova-api发送创建虚拟机的rpc请求时会先创建一个topic publisher用于话题发布，发布的topic为conductor，method为build_instance，然后publisher将消息发送给话题交换器，话题交换器再根据routing_key转发给绑定的消息队列，最后由topic consumer接收并调用nova-conductor manager中的build_instance方法处理<br><img src="/3642561074/4.png" alt="4.ping"></p><p>创建虚拟机过程中的所有HTTP请求和RPC请求均会占用服务器的TCP连接数。一般来说，作为客户端的TCP连接数最大为65535个，但也会受到内存、文件描述符等因素的影响，所以为保证正常创建虚拟机，可以使用监控工具来监控服务器的资源或进行TCP连接的调优。</p><h2 id="从nova-compute到Hypervisor"><a href="#从nova-compute到Hypervisor" class="headerlink" title="从nova-compute到Hypervisor"></a>从nova-compute到Hypervisor</h2><p>nova-compute收到请求后再分别调用glanceclient、neutronclient和cinderclient向glance、neutron、cinder获取创建虚拟机的镜像、网络、存储信息，认证过程与nova-api类似。</p><p><img src="/3642561074/5.png" alt="5.png"></p><p>此时虚拟机的vm_state为Building，虚拟机还只存在于数据库中，完成最后的创建还要交给Hypervisor。OpenStack支持的Hypervisor包括Libvirt、hyperv、xen、vmware等，其中对libvirt管理的KVM的支持性最好，这也是OpenStack默认的hypervisor。当libvirt收到创建请求时，会拉取镜像创建根存储、根据请求中的虚拟机信息生成xml文件，再根据xml文件创建网络（如ovs上创建端口）、define domain、start domain等，直到libvirt检测到虚拟机状态为running则创建成功。<br>当OpenStack使用Ceph共享存储时，镜像无需下载到本地再上传到后端，而是直接使用clone，配合Ceph支持的COW技术几乎可以完成虚拟机的秒级启动。前提是使用raw格式的镜像，因为Ceph不支持从qcow2的镜像引导，若使用qcow2镜像创建虚拟机，则需要将镜像下载到本地转换成raw格式再上传，不仅增加启动时间，而且还可能因为空间不足无法完成镜像的格式转换从而造成虚拟机启动失败，所以建议直接使用raw格式的镜像创建虚拟机。<br>为避免创建过程中服务的单点故障，建议使用keepalived+haproxy的方式实现OpenStack各个服务的高可用。<br>结束语<br>创建虚拟机是OpenStack的基本功能，掌握整个虚拟机的创建流程，有助于理解OpenStack各个组件以及组件内部的通信过程，同时，对理解虚拟机的其他操作流程也有很大帮助。同时，对于OpenStack运维人员来说，掌握虚拟机几个核心操作的流程，可以帮助我们在遇到类似虚拟机创建错误等问题时进行快速定位。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p><a href="https://www.cnblogs.com/girl1314/p/10647168.html" target="_blank" rel="noopener">https://www.cnblogs.com/girl1314/p/10647168.html</a><br><a href="https://blog.csdn.net/dylloveyou/article/details/78587308" target="_blank" rel="noopener">https://blog.csdn.net/dylloveyou/article/details/78587308</a><br><a href="https://www.cnblogs.com/chris-cp/p/6678719.html" target="_blank" rel="noopener">https://www.cnblogs.com/chris-cp/p/6678719.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;style&gt; 
    img {
        width: 100%;
    }
&lt;/style&gt;
&lt;p&gt;在初学openstack的时候， 总搞不懂openstack到底是干什么的？ 通过学习openstack创建虚拟机的流程， 意在了解虚拟机创建过程中各个组件之间的协调工作， 加深对openstack有清晰的结构。 该文章属于转载文章， 对其中一些不清楚的概念进行补充， 主要分为两部分， 第一部分创建虚拟机过程中的数据流向（整体架构），第二部分是虚拟机创建过程的各个部分的详细解说（部分架构）&lt;/p&gt;
    
    </summary>
    
    
      <category term="openstack" scheme="https://www.wchen.club/categories/openstack/"/>
    
    
      <category term="cloud computing" scheme="https://www.wchen.club/tags/cloud-computing/"/>
    
  </entry>
  
  <entry>
    <title>openstack queens搭建</title>
    <link href="https://www.wchen.club/1099219925.html"/>
    <id>https://www.wchen.club/1099219925.html</id>
    <published>2020-05-04T11:20:40.000Z</published>
    <updated>2020-05-11T06:31:14.767Z</updated>
    
    <content type="html"><![CDATA[<p>openstack各个组件的作用</p><blockquote><p>openstack是框架， 用户可以在上面定制你需要的服务</p></blockquote><table><thead><tr><th align="left">组件</th><th align="left">项目名</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">compute</td><td align="left">Nova</td><td align="left">计算服务 （创建销毁虚拟机）</td></tr><tr><td align="left">Image Service</td><td align="left">Glance</td><td align="left">镜像服务（不同镜像版本）</td></tr><tr><td align="left">Object storage</td><td align="left">Swift</td><td align="left">对象储存</td></tr><tr><td align="left">Block storage</td><td align="left">Cinder</td><td align="left">块存储</td></tr><tr><td align="left">Networking</td><td align="left">Neutron</td><td align="left">网络服务</td></tr><tr><td align="left">Dashboard</td><td align="left">Horizon</td><td align="left">仪表盘</td></tr><tr><td align="left">Identity service</td><td align="left">Keystone</td><td align="left">认证服务</td></tr><tr><td align="left">Orchestration</td><td align="left">Heat</td><td align="left">编排</td></tr><tr><td align="left">Telemetry</td><td align="left">Ceilometer</td><td align="left">监控（CPU利用率监控）</td></tr><tr><td align="left">Database Service</td><td align="left">Trove</td><td align="left">数据库服务</td></tr><tr><td align="left">Data processing</td><td align="left">Sahara</td><td align="left">数据处理</td></tr></tbody></table><a id="more"></a><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><h2 id="关闭防火墙、selinux"><a href="#关闭防火墙、selinux" class="headerlink" title="关闭防火墙、selinux"></a>关闭防火墙、selinux</h2><blockquote><p> Permission denied: AH00072</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld </span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux/config</span><br><span class="line"><span class="comment"># 验证是否关闭</span></span><br><span class="line">grep SELINUX=disabled /etc/selinux/config</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><h2 id="节点IP配置"><a href="#节点IP配置" class="headerlink" title="节点IP配置"></a>节点IP配置</h2><blockquote><p>注意配置前需要先设置静态IP地址</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">192.168.1.100  controller</span><br><span class="line">192.168.1.101  computer</span><br><span class="line">192.168.1.102  block</span><br><span class="line">192.168.1.103  object001</span><br><span class="line">192.168.1.104  object002</span><br></pre></td></tr></table></figure><h2 id="网络时间协议NTP-chrony"><a href="#网络时间协议NTP-chrony" class="headerlink" title="网络时间协议NTP(chrony)"></a>网络时间协议NTP(chrony)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y chrony </span><br><span class="line">/etc/chrony.conf  <span class="comment">#添加配置</span></span><br><span class="line">server NTP_SERVER iburst</span><br><span class="line">allow 192.168.1.0/24  <span class="comment"># 设置网段</span></span><br><span class="line"><span class="comment"># 自启和启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> chroyd</span><br><span class="line">systemctl start chroyd</span><br><span class="line">chronyc sources <span class="comment"># 验证同步</span></span><br></pre></td></tr></table></figure><h2 id="openstack软件包"><a href="#openstack软件包" class="headerlink" title="openstack软件包"></a>openstack软件包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum search openstack  <span class="comment"># 搜索openstack</span></span><br><span class="line">yum install -y centos-release-openstack-queens  <span class="comment"># 安装oepnstack</span></span><br><span class="line">yum upgrade <span class="comment"># 更新</span></span><br><span class="line">yum install -y python-openstackclient <span class="comment"># 安装openstack客户端</span></span><br><span class="line">yum install -y openstack-selinux <span class="comment"># 自动管理openstack的安全组策略</span></span><br></pre></td></tr></table></figure><h2 id="SQL数据库"><a href="#SQL数据库" class="headerlink" title="SQL数据库"></a>SQL数据库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mariadb mariadb-server python2-PyMySQL <span class="comment"># 安装mariadb</span></span><br><span class="line">vim /etc/my.conf.d/oepnstack.cnf  <span class="comment"># 编辑并插入</span></span><br><span class="line"><span class="comment"># oepnstack.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="built_in">bind</span>-address = 10.0.0.11</span><br><span class="line">default-storage-engine = innodb</span><br><span class="line">innodb_file_per_table = on</span><br><span class="line">max_connections = 4096</span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line">character-set-server = utf8</span><br><span class="line"><span class="comment"># 设置自启和启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb.service</span><br><span class="line">systemctl start mariadb.service</span><br><span class="line">mysql_secure_installation  <span class="comment"># 选择适当密码，密码初始化为空  [123456]</span></span><br></pre></td></tr></table></figure><h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install -y rabbitmq-server</span><br><span class="line">systemctl <span class="built_in">enable</span> rabbitmq-service.serivice</span><br><span class="line">systemctl start rabbitmq-server.service</span><br><span class="line">rabbitmaqctl add_user openstack 123456  <span class="comment"># 添加openstack用户 密码[123456]</span></span><br><span class="line">rabbitmqctl set_permissions openstack <span class="string">".*"</span> <span class="string">".*"</span> <span class="string">".*"</span>  <span class="comment"># openstack添加读写权限</span></span><br></pre></td></tr></table></figure><h2 id="Memcached缓存令牌"><a href="#Memcached缓存令牌" class="headerlink" title="Memcached缓存令牌"></a>Memcached缓存令牌</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y memcached python-memcached</span><br><span class="line">vim  /etc/sysconfig/memcached</span><br><span class="line"><span class="comment"># memcached</span></span><br><span class="line">OPTIONS=<span class="string">"-l 127.0.0.1,::1,controller"</span></span><br><span class="line"><span class="comment"># 自启和启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> memcached.service</span><br><span class="line">systemctl start memcached.service</span><br></pre></td></tr></table></figure><h2 id="分布式可靠键值储存（Etcd）"><a href="#分布式可靠键值储存（Etcd）" class="headerlink" title="分布式可靠键值储存（Etcd）"></a>分布式可靠键值储存（Etcd）</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">yum install -y etcd</span><br><span class="line"><span class="comment"># cp /etc/etcd/etcd.conf /etc/etcd/etcd.conf.bak 备份</span></span><br><span class="line">vim /etc/etcd/etcd.conf  <span class="comment"># IP为控制节点</span></span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line">ETCD_DATA_DIR=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line">ETCD_LISTEN_PEER_URLS=<span class="string">"http://192.168.1.100:2380"</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">"http://192.168.1.100:2379"</span></span><br><span class="line">ETCD_NAME=<span class="string">"controller"</span>  </span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class="string">"http://192.168.1.100:2380"</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">"http://192.168.1.100:2379"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER=<span class="string">"controller=http://192.168.1.100:2380"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">"etcd-cluster-01"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=<span class="string">"new"</span></span><br><span class="line"><span class="comment"># 设置自启并启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> etcd</span><br><span class="line">systemctl start etcd</span><br></pre></td></tr></table></figure><h1 id="keystone（Identity-Serveice）安装配置"><a href="#keystone（Identity-Serveice）安装配置" class="headerlink" title="keystone（Identity Serveice）安装配置"></a>keystone（Identity Serveice）安装配置</h1><h2 id="创建数据库和授权"><a href="#创建数据库和授权" class="headerlink" title="创建数据库和授权"></a>创建数据库和授权</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p   <span class="comment"># 登录mysql</span></span><br><span class="line">CREATE DATABASE  keystone <span class="comment"># keystone数据库</span></span><br><span class="line"><span class="comment"># keystone数据的所有权限授权给keystone用户 密码[123456]</span></span><br><span class="line">GRANT ALL PRIVILEGES ON keystone.* TO <span class="string">'keystone'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON keystone.* TO <span class="string">'keystone'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line">openssl rand -hex 10 <span class="comment"># 随机生成管理员令牌ADMIN_TOKEN  05d9bdf3dfd5196e6424</span></span><br></pre></td></tr></table></figure><h2 id="keytone配置安装"><a href="#keytone配置安装" class="headerlink" title="keytone配置安装"></a>keytone配置安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">yum install  -y oepnstack-keystone httpd mod_wsgi</span><br><span class="line">vim /etc/keystone/keystone.conf</span><br><span class="line"><span class="comment"># keystone.conf</span></span><br><span class="line">[DEFAULT] </span><br><span class="line">admin_token = ADMIN_TOKEN</span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql:keystone:123456@controller/keystone  <span class="comment"># 配置数据库访问 123456为数据库密码 </span></span><br><span class="line">[token]</span><br><span class="line">provider = fernet <span class="comment"># Fernet认证方式</span></span><br><span class="line"><span class="comment"># 填充身份到数据库</span></span><br><span class="line">su -s /bin/sh -c <span class="string">"keystone-manage db_sync"</span> keystone <span class="comment"># 初始化身份认证服务的数据库</span></span><br><span class="line"><span class="comment"># 初始化fernet钥匙仓库</span></span><br><span class="line">keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone  </span><br><span class="line">keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span><br><span class="line"><span class="comment"># 引导身份服务 </span></span><br><span class="line">keystone-manage bootstrap --bootstrap-password 123456 \</span><br><span class="line">  --bootstrap-admin-url http://controller:5000/v3/ \</span><br><span class="line">  --bootstrap-internal-url http://controller:5000/v3/ \</span><br><span class="line">  --bootstrap-public-url http://controller:5000/v3/ \</span><br><span class="line">  --bootstrap-region-id RegionOne</span><br></pre></td></tr></table></figure><h2 id="配置apache-http服务器"><a href="#配置apache-http服务器" class="headerlink" title="配置apache http服务器"></a>配置apache http服务器</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ServerName controller</span><br><span class="line"><span class="comment"># 软连</span></span><br><span class="line">ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span><br><span class="line"><span class="comment"># 启动httpd</span></span><br><span class="line">systemctl <span class="built_in">enable</span> httpd.service</span><br><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure><h2 id="管理员账户环境变量"><a href="#管理员账户环境变量" class="headerlink" title="管理员账户环境变量"></a>管理员账户环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> OS_USERNAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_PASSWORD=123456</span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_NAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_USER_DOMAIN_NAME=Default</span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line"><span class="built_in">export</span> OS_AUTH_URL=http://controller:5000/v3</span><br><span class="line"><span class="built_in">export</span> OS_IDENTITY_API_VERSION=3 <span class="comment"># 配置API版本</span></span><br></pre></td></tr></table></figure><h2 id="创建domain、project、user、role"><a href="#创建domain、project、user、role" class="headerlink" title="创建domain、project、user、role"></a>创建domain、project、user、role</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建example domain</span></span><br><span class="line">openstack domain create --description <span class="string">"An Example Domain"</span> example</span><br><span class="line"><span class="comment"># 创建service project</span></span><br><span class="line">openstack project create --domain default --description <span class="string">"Service Project"</span> service</span><br><span class="line"><span class="comment"># 创建demo project</span></span><br><span class="line">openstack project create --domain default --description <span class="string">"Demo Project"</span> demo</span><br><span class="line"><span class="comment"># 创建demo user</span></span><br><span class="line">openstack user create --domain default --password-prompt demo <span class="comment"># password [123456]</span></span><br><span class="line"><span class="comment"># 创建user角色</span></span><br><span class="line">openstack role create user</span><br></pre></td></tr></table></figure><!-- ![project-user-role.png](project-user-role.png) --><h2 id="验证-keystone"><a href="#验证-keystone" class="headerlink" title="验证 keystone"></a>验证 keystone</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> OS_AUTH_URL OS_PASSWORD</span><br><span class="line"></span><br><span class="line">openstack --os-auth-url http://controller:35357/v3 \</span><br><span class="line">  --os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">  --os-project-name admin --os-username admin token issue</span><br><span class="line">openstack --os-auth-url http://controller:5000/v3 \</span><br><span class="line">  --os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">  --os-project-name demo --os-username demo token issue</span><br></pre></td></tr></table></figure><h2 id="创建脚本"><a href="#创建脚本" class="headerlink" title="创建脚本"></a>创建脚本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $CUSTOM自定义目录</span></span><br><span class="line"><span class="comment"># vim $CUSTOM/admin-openrc</span></span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line"><span class="built_in">export</span> OS_USER_DOMAIN_NAME=Default</span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_NAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_USERNAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_PASSWORD=123456</span><br><span class="line"><span class="built_in">export</span> OS_AUTH_URL=http://controller:5000/v3</span><br><span class="line"><span class="built_in">export</span> OS_IDENTITY_API_VERSION=3</span><br><span class="line"><span class="built_in">export</span> OS_IMAGE_API_VERSION=2</span><br><span class="line"><span class="comment"># vim $CUSTOM/demo-openrc</span></span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line"><span class="built_in">export</span> OS_USER_DOMAIN_NAME=Default</span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_NAME=demo</span><br><span class="line"><span class="built_in">export</span> OS_USERNAME=demo</span><br><span class="line"><span class="built_in">export</span> OS_PASSWORD=123456</span><br><span class="line"><span class="built_in">export</span> OS_AUTH_URL=http://controller:5000/v3</span><br><span class="line"><span class="built_in">export</span> OS_IDENTITY_API_VERSION=3</span><br><span class="line"><span class="built_in">export</span> OS_IMAGE_API_VERSION=2</span><br></pre></td></tr></table></figure><h1 id="安装glance-Image-Service"><a href="#安装glance-Image-Service" class="headerlink" title="安装glance (Image Service)"></a>安装glance (Image Service)</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">CREATE DATABASE glance;</span><br><span class="line"><span class="comment"># 授权 password [123456]</span></span><br><span class="line">GRANT ALL PRIVILEGES ON glance.* TO <span class="string">'glance'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON glance.* TO <span class="string">'glance'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line"><span class="comment"># 运行自定义脚本</span></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$CUSTOM</span>/admin-openrc</span><br><span class="line"><span class="comment"># 创建glance用户 password[123456]</span></span><br><span class="line">openstack user create --domain default --password-prompt glance</span><br><span class="line"><span class="comment"># 将管理员角色添加到glance项目中</span></span><br><span class="line">openstack role add --project service --user glance admin</span><br><span class="line"><span class="comment"># 创建服务实体</span></span><br><span class="line">openstack service create --name glance \</span><br><span class="line">  --description <span class="string">"OpenStack Image"</span> image</span><br><span class="line"><span class="comment"># 创建镜像服务API endpoints</span></span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  image public http://controller:9292</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  image internal http://controller:9292</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  image admin http://controller:9292</span><br></pre></td></tr></table></figure><h2 id="glance安装配置"><a href="#glance安装配置" class="headerlink" title="glance安装配置"></a>glance安装配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openstack-glance</span><br><span class="line">vim /etc/glance/glance-api.conf</span><br><span class="line"><span class="comment"># glance-api.conf</span></span><br><span class="line">[database]</span><br><span class="line"><span class="comment"># password [123456]</span></span><br><span class="line">connection = mysql+pymysql://glance:123456S@controller/glance </span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">auth_uri = http://controller:5000</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line">password = GLANCE_PASS</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">flavor = keystone</span><br><span class="line">[glance_store]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">stores = file,http</span><br><span class="line">default_store = file</span><br><span class="line">filesystem_store_datadir = /var/lib/glance/images/</span><br><span class="line"></span><br><span class="line">vim  /etc/glance/glance-registry.conf</span><br><span class="line"><span class="comment"># glance-registry.conf</span></span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance</span><br><span class="line">[keystone_authtoken]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">auth_uri = http://controller:5000</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line">password = GLANCE_PASS</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">flavor = keystone</span><br><span class="line"><span class="comment"># 填充数据库</span></span><br><span class="line">su -s /bin/sh -c <span class="string">"glance-manage db_sync"</span> glance</span><br><span class="line"><span class="comment"># 设置自启和启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> openstack-glance-api.service \</span><br><span class="line">  openstack-glance-registry.service</span><br><span class="line">systemctl start openstack-glance-api.service \</span><br><span class="line">  openstack-glance-registry.service</span><br></pre></td></tr></table></figure><h2 id="验证glance"><a href="#验证glance" class="headerlink" title="验证glance"></a>验证glance</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> admin-openrc</span><br><span class="line">wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</span><br><span class="line"></span><br><span class="line">openstack image create <span class="string">"cirros"</span> \</span><br><span class="line">  --file cirros-0.4.0-x86_64-disk.img \</span><br><span class="line">  --disk-format qcow2 --container-format bare \</span><br><span class="line">  --public</span><br><span class="line"><span class="comment"># 查看镜像列表</span></span><br><span class="line">openstack image list</span><br></pre></td></tr></table></figure><h1 id="nova配置安装-compute"><a href="#nova配置安装-compute" class="headerlink" title="nova配置安装(compute)"></a>nova配置安装(compute)</h1><h2 id="前提-1"><a href="#前提-1" class="headerlink" title="前提"></a>前提</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用root用户连接数据库</span></span><br><span class="line">mysql -u root -p</span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">CREATE DATABASE nova_api;</span><br><span class="line">CREATE DATABASE nova;</span><br><span class="line">CREATE DATABASE nova_cell0;</span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">GRANT ALL PRIVILEGES ON nova_api.* TO <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  IDENTIFIED BY <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova_api.* TO <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  IDENTIFIED BY <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON nova.* TO <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  IDENTIFIED BY <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova.* TO <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  IDENTIFIED BY <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON nova_cell0.* TO <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  IDENTIFIED BY <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON nova_cell0.* TO <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  IDENTIFIED BY <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"><span class="comment"># 管理员</span></span><br><span class="line">. admin-openrc</span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">openstack user create --domain default --password-prompt nova <span class="comment"># password[123456]</span></span><br><span class="line"><span class="comment"># 添加管理员角色</span></span><br><span class="line">openstack role add --project service --user nova admin</span><br><span class="line"><span class="comment"># 创建服务实体</span></span><br><span class="line">openstack service create --name nova \</span><br><span class="line">  --description <span class="string">"OpenStack Compute"</span> compute</span><br><span class="line"><span class="comment"># 创建api endpoint</span></span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  compute public http://controller:8774/v2.1</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  compute internal http://controller:8774/v2.1</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">  compute internal http://controller:8774/v2.1</span><br><span class="line"><span class="comment"># 创建user placement</span></span><br><span class="line">openstack user create --domain default --password-prompt placement</span><br><span class="line"><span class="comment"># 创建服务实体</span></span><br><span class="line">openstack service create --name placement --description <span class="string">"Placement API"</span> placement</span><br><span class="line"><span class="comment"># 创建api endpoint  </span></span><br><span class="line">openstack endpoint create --region RegionOne placement public http://controller:8778 </span><br><span class="line">openstack endpoint create --region RegionOne placement internal http://controller:8778 </span><br><span class="line">openstack endpoint create --region RegionOne placement admin http://controller:8778</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install openstack-nova-api openstack-nova-conductor \</span><br><span class="line">  openstack-nova-console openstack-nova-novncproxy \</span><br><span class="line">  openstack-nova-scheduler openstack-nova-placement-api</span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[DEFAULT]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">[api_database]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova</span><br><span class="line">[DEFAULT]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">transport_url = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line">[api]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">auth_strategy = keystone</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">auth_url = http://controller:5000/v3</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = NOVA_PASS</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;openstack各个组件的作用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;openstack是框架， 用户可以在上面定制你需要的服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;组件&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;项目名&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;compute&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Nova&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;计算服务 （创建销毁虚拟机）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Image Service&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Glance&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;镜像服务（不同镜像版本）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Object storage&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Swift&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;对象储存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Block storage&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Cinder&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;块存储&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Networking&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Neutron&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;网络服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Dashboard&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Horizon&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;仪表盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Identity service&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Keystone&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;认证服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Orchestration&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Heat&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;编排&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Telemetry&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Ceilometer&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;监控（CPU利用率监控）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Database Service&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Trove&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;数据库服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Data processing&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sahara&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;数据处理&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>javascript实现最小堆</title>
    <link href="https://www.wchen.club/2316181141.html"/>
    <id>https://www.wchen.club/2316181141.html</id>
    <published>2020-04-21T15:28:42.000Z</published>
    <updated>2020-04-24T04:51:29.401Z</updated>
    
    <content type="html"><![CDATA[<p>在python可以使用heapq实现最小堆，通过列表初始化最小堆，就可以使用最小堆。但是在javascript最小堆就需要我们自己去实现。本次实践主要是看看python一行代码包含哪些知识点。</p><a id="more"></a><h2 id="什么是最小堆"><a href="#什么是最小堆" class="headerlink" title="什么是最小堆"></a>什么是最小堆</h2><blockquote><p>根结点的键值是所有堆结点键值中最小者的堆 </p></blockquote><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>左图为操作前，右图为操作后。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p><img src="/2316181141/heap1.png" alt="heap1"></p><blockquote><p>首先我们找到最后的一个节点的父节点(parent)，把当前parent的左右子节点取最小值(minNode)与父节点进行比较，如若小于父节点，调换最小子节点和父节点。 调换完成之后可能存在minNode的子节点比minNode小，所以minNode向下浮动。</p></blockquote><h3 id="插入元素"><a href="#插入元素" class="headerlink" title="插入元素"></a>插入元素</h3><p><img src="/2316181141/push.png" alt="push"></p><blockquote><p>插入元素在最后一个位置进行插入，计算当前节点的父节点parent，比较parent与最小节点的大小，如若小于调换位置，parent继续计算上级父节点执行迭代操作</p></blockquote><h3 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h3><p><img src="/2316181141/pop.png" alt="pop"></p><blockquote><p>储存第一个元素temp，调换最后为一个元素和第一个元素并删除最后一个元素。之后一个元素下浮。返回temp</p></blockquote><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><blockquote><ol><li>通过数组初始化最小堆</li><li>插入元素</li><li>删除堆顶元素</li></ol></blockquote><h3 id="通过数组初始化最小堆"><a href="#通过数组初始化最小堆" class="headerlink" title="通过数组初始化最小堆"></a>通过数组初始化最小堆</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>list  初始堆列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">constructor</span>(list) &#123;</span><br><span class="line">    <span class="keyword">this</span>.list = list || [];</span><br><span class="line">    <span class="keyword">this</span>.build(<span class="keyword">this</span>.list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 堆是否为空</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">isEmpty() &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.list.length === <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">size() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.list.length;</span><br><span class="line">&#125;</span><br><span class="line">build(list) &#123;</span><br><span class="line">    <span class="keyword">if</span>(list.length === <span class="number">0</span> || list.length === <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">this</span>.heapUp(); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 交换节点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>i </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>j </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">swap(i, j) &#123;</span><br><span class="line">    <span class="keyword">let</span> list = <span class="keyword">this</span>.list;</span><br><span class="line">    [list[i], list[j]] = [list[j], list[i]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取最小子节点索引</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>parent 父节点索引 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">minChildNode(parent) &#123;</span><br><span class="line">    <span class="keyword">let</span> minIndex;</span><br><span class="line">    <span class="keyword">let</span> len = <span class="keyword">this</span>.size();</span><br><span class="line">    <span class="keyword">let</span> list = <span class="keyword">this</span>.list;</span><br><span class="line">    <span class="keyword">if</span>(parent * <span class="number">2</span> + <span class="number">2</span> &lt; len) &#123;</span><br><span class="line">        minIndex = list[parent * <span class="number">2</span> + <span class="number">2</span>] &gt; list[parent * <span class="number">2</span> + <span class="number">1</span>] ? parent * <span class="number">2</span> + <span class="number">1</span> : parent *<span class="number">2</span> + <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        minIndex = parent * <span class="number">2</span> + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> minIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上浮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">heapUp() &#123;</span><br><span class="line">    <span class="keyword">let</span> list = <span class="keyword">this</span>.list;</span><br><span class="line">    <span class="keyword">let</span> len = <span class="keyword">this</span>.size();</span><br><span class="line">    <span class="keyword">let</span> minIndex, parent;</span><br><span class="line">    <span class="comment">// 父节点</span></span><br><span class="line">    parent = <span class="built_in">parseInt</span>((len - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">while</span>(parent &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        minIndex = <span class="keyword">this</span>.minChildNode(parent);</span><br><span class="line">        <span class="keyword">if</span>(list[parent] &gt; list[minIndex]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.swap(parent, minIndex);</span><br><span class="line">            <span class="keyword">this</span>.heapDown(minIndex);</span><br><span class="line">        &#125;</span><br><span class="line">        parent --;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下浮</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>parent </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">heapDown(parent) &#123;</span><br><span class="line">    <span class="keyword">let</span> list = <span class="keyword">this</span>.list;</span><br><span class="line">    <span class="keyword">let</span> len = <span class="keyword">this</span>.size();</span><br><span class="line">    <span class="keyword">let</span> minIndex;</span><br><span class="line">    <span class="keyword">while</span>(parent &lt; len) &#123;</span><br><span class="line">        minIndex = <span class="keyword">this</span>.minChildNode(parent);</span><br><span class="line">        <span class="keyword">if</span>(minIndex &lt; len &amp;&amp; list[parent] &gt; list[minIndex]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.swap(parent, minIndex);   </span><br><span class="line">            parent = minIndex;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入元素-1"><a href="#插入元素-1" class="headerlink" title="插入元素"></a>插入元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加节点如最小堆</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>node </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">push(node) &#123;</span><br><span class="line">    <span class="keyword">this</span>.list.push(node);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.list.length === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> list = <span class="keyword">this</span>.list;</span><br><span class="line">    <span class="keyword">let</span> current = <span class="keyword">this</span>.list.length - <span class="number">1</span>, parent;</span><br><span class="line">    <span class="keyword">while</span>(current &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        parent = <span class="built_in">parseInt</span>((current - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(list[current] &lt; list[parent]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.swap(current, parent);</span><br><span class="line">            current = parent;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除元素-1"><a href="#删除元素-1" class="headerlink" title="删除元素"></a>删除元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 弹出堆顶元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">pop() &#123;</span><br><span class="line">    <span class="keyword">let</span> list = <span class="keyword">this</span>.list, temp;</span><br><span class="line">    <span class="keyword">if</span>(list.length === <span class="number">0</span> || list.length == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> list.pop();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        temp = list[<span class="number">0</span>];</span><br><span class="line">        list[<span class="number">0</span>] = list[list.length - <span class="number">1</span>];</span><br><span class="line">        list.pop();</span><br><span class="line">        <span class="keyword">this</span>.heapDown(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://zh.wikipedia.org/wiki%E6%9C%80%E5%A4%A7%E2%80%94%E6%9C%80%E5%B0%8F%E5%A0%86" target="_blank" rel="noopener">维基百科</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在python可以使用heapq实现最小堆，通过列表初始化最小堆，就可以使用最小堆。但是在javascript最小堆就需要我们自己去实现。本次实践主要是看看python一行代码包含哪些知识点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="javascript" scheme="https://www.wchen.club/tags/javascript/"/>
    
      <category term="web" scheme="https://www.wchen.club/tags/web/"/>
    
      <category term="DataStruct" scheme="https://www.wchen.club/tags/DataStruct/"/>
    
  </entry>
  
  <entry>
    <title>chrome调试技巧</title>
    <link href="https://www.wchen.club/1349945571.html"/>
    <id>https://www.wchen.club/1349945571.html</id>
    <published>2020-04-17T09:39:49.000Z</published>
    <updated>2020-04-17T13:15:08.543Z</updated>
    
    <content type="html"><![CDATA[<style>     img {        width: 100%;    }</style><p>chrome作为前端调试的利器，熟练的操作chrome会大大提高我们的开发效率。google调试包括方方面面，网络调试、性能优化、代码调试、代码覆盖率等功能。可以让我们调试和优化代码起到不可忽视的作用。下面主要讨论常用的几个功能，如果了解细节请查看官方文档。</p><a id="more"></a><h2 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h2><p>在元素中随便选择一个节点，通过右边可查看该节点的样式，如果想查看分裂过的直接电烤computed选择样式可以跳转对应的styles位置，通过点击需要修改的央视直接键盘输入即可。除了修改样式之外还可以查看EventListener，查看该节点绑定的事件，右上角有加号可以添加类和hover伪类<br><img src="/1349945571/1.png" alt></p><h2 id="ajax请求数据"><a href="#ajax请求数据" class="headerlink" title="ajax请求数据"></a>ajax请求数据</h2><p>在前后端分离系统中，我们通常会使用ajax异步传输数据。如何查看数据的传输类型和响应类型，这将对于排查数据错误起到决定性的作用。<br>点开网络部分，通过点击需要查看的请求，可以看到你想要的内容<br><img src="/1349945571/2.png" alt></p><h2 id="工作空间和片"><a href="#工作空间和片" class="headerlink" title="工作空间和片"></a>工作空间和片</h2><p>再开过程中我们可以很暴力的把项目文件直接拖入google浏览器，通过google直接进行修改，在源码部分中的workspace部分可以直接修改我们的代码<br><img src="/1349945571/3.png" alt><br>在很多时候我们需要测试一小段代码，这个时候如果新建一个目录测试显得太不专业了，通过源码部分的snippets可以直接编写代码，右键文件运行即可<br><img src="/1349945571/4.png" alt></p><h2 id="查看cookie"><a href="#查看cookie" class="headerlink" title="查看cookie"></a>查看cookie</h2><p>为了减轻服务器的压力，前后端交互的时候都会传输一些cookie保留在本地，让本地直接操作。<br><img src="/1349945571/5.png" alt></p><h2 id="打印对象节点"><a href="#打印对象节点" class="headerlink" title="打印对象节点"></a>打印对象节点</h2><p>通过console.log打印节点的时候，你会发现节点是通过渲染之后的节点，这个时候我们容易忽视的控制台打印节点登场了console.dir，下面两个例子来感受一下。<br><img src="/1349945571/6.png" alt></p><h2 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h2><p>控制台打印语句打印完之后如果我们想使用打印出来的数据该怎么办，你不会在去重写写一遍语句赋给一个变量吧，让我们来使用高大上的方式来储存为新变量。<br>    • 直接单机右键选择储存为变量<br>    • 这个方法还可以用于在元素节点中，右键储存为变量<br><img src="/1349945571/7.png" alt></p><h2 id="selector"><a href="#selector" class="headerlink" title="$(selector)"></a>$(selector)</h2><p>document.querySelector或者document.getElementById这么一段命令对于让你很崩溃，没事google提供$(‘selector’)提供选择元素节点，这个有点像jquery，只是‘像’，细节可以下载jquery慢慢体会一下。</p><h2 id="清理控制台"><a href="#清理控制台" class="headerlink" title="清理控制台"></a>清理控制台</h2><p>控制条满满的错误，让你看着很不舒服，没关系，我们使用快捷键ctrl + L 清空它，当然也可以使用console.clear()</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>上面只是简单的介绍简化流程的方法，更多的方法需要你查看官方文档或者长期的积累才能熟练掌握。上面没有涉及命令模式的使用主要是这个复杂，对于初学者也没必要去掌握。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://developers.google.com/web/tools/chrome-devtools?hl=zh-cn" target="_blank" rel="noopener">Chrome 开发者工具</a></p>]]></content>
    
    <summary type="html">
    
      &lt;style&gt; 
    img {
        width: 100%;
    }
&lt;/style&gt;
&lt;p&gt;chrome作为前端调试的利器，熟练的操作chrome会大大提高我们的开发效率。google调试包括方方面面，网络调试、性能优化、代码调试、代码覆盖率等功能。可以让我们调试和优化代码起到不可忽视的作用。下面主要讨论常用的几个功能，如果了解细节请查看官方文档。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="browser" scheme="https://www.wchen.club/tags/browser/"/>
    
  </entry>
  
  <entry>
    <title>vue技术解密</title>
    <link href="https://www.wchen.club/1069906284.html"/>
    <id>https://www.wchen.club/1069906284.html</id>
    <published>2020-04-17T09:26:59.000Z</published>
    <updated>2020-04-17T12:47:19.528Z</updated>
    
    <content type="html"><![CDATA[<style>    img {        width: 100%;    }</style><h2 id="阅读源码顺序"><a href="#阅读源码顺序" class="headerlink" title="阅读源码顺序"></a>阅读源码顺序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">src/platforms/entry-runtime-with-compiler</span><br><span class="line">src/platforms/runtime/index.js</span><br><span class="line">src/core/instance/index.js  </span><br><span class="line">src/core/instance/init.js</span><br><span class="line">src/core/instance/lifecycle.js</span><br><span class="line">    mountComponen</span><br><span class="line">    Vue.prototype._update </span><br><span class="line">patch.js</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="/1069906284/vue-lifecycle.png" alt></p><h2 id="vue-mount"><a href="#vue-mount" class="headerlink" title="vue.$mount"></a>vue.$mount</h2><p>对el进行限制，Vue不能挂载在body、html上，如果没有render方法。把el或者template字符串转换为render方法，无论单文件.vue方式开发组件，还是el或者template属性最终都转换为render方法<br><img src="/1069906284/1.png" alt><br><img src="/1069906284/2.png" alt></p><p>模板和数据如何渲染成最终的 DOM 的过程分析完毕了，我们可以通过下图更直观地看到从初始化 Vue 到最终渲染的整个过程。<br><img src="/1069906284/3.png" alt></p><h2 id="在vm-prototype-update的作用"><a href="#在vm-prototype-update的作用" class="headerlink" title="在vm.prototype._update的作用"></a>在vm.prototype._update的作用</h2><blockquote><p>首次更新视图调用，把虚拟节点转化为真是的节点<br>当视图发生变化时，对比当前节点和以前节点进行更新视图</p></blockquote><p><img src="/1069906284/4.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
    img {
        width: 100%;
    }
&lt;/style&gt;

&lt;h2 id=&quot;阅读源码顺序&quot;&gt;&lt;a href=&quot;#阅读源码顺序&quot; class=&quot;headerlink&quot; title=&quot;阅读源码顺序&quot;&gt;&lt;/a&gt;阅读源码顺序&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src/platforms/entry-runtime-with-compiler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/platforms/runtime/index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/core/instance/index.js  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/core/instance/init.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/core/instance/lifecycle.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mountComponen	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vue.prototype._update &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;patch.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="vue.js" scheme="https://www.wchen.club/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>vue源码解析</title>
    <link href="https://www.wchen.club/1110837624.html"/>
    <id>https://www.wchen.club/1110837624.html</id>
    <published>2020-04-17T09:04:38.000Z</published>
    <updated>2020-04-17T09:49:34.857Z</updated>
    
    <content type="html"><![CDATA[<style>    img {        width: 100%;    }</style><p>Vue采用数据劫持配合发布者-订阅者模式的方式，通过Object.defineProperty来配置getter和setter来劫持数据的变化，在数据变动时，发布消息给依赖收集器，去通知观察者做出对应的回调函数，去更新视图。<br>MVVM 作为绑定的入口，整合Observer,Compile和Watcher三者，通过Observer来监听model数据变化，通过Compile来解析编译模板指令，最终利用Watcher搭起Observer,Compile之间的通信桥梁，达到数据数据变化 =&gt; 视图更新，视图的交互变化 =&gt; 数据model变更的双向绑定效果</p><a id="more"></a><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><p><img src="/1110837624/UML.png" alt></p><h2 id="观察者-订阅者部分"><a href="#观察者-订阅者部分" class="headerlink" title="观察者-订阅者部分"></a>观察者-订阅者部分</h2><h3 id="数据观察者"><a href="#数据观察者" class="headerlink" title="数据观察者"></a>数据观察者</h3><p>observer: 对数据进行循环遍历调用defineReactive方法<br>defineReactive: 对数据通过Object.defineProperty进行配置</p><blockquote><p>在getter方法中添加订阅者<br>在setter方法调用Dep.notify通知订阅者</p></blockquote><h3 id="收集依赖器"><a href="#收集依赖器" class="headerlink" title="收集依赖器"></a>收集依赖器</h3><p><img src="/1110837624/dep.png" alt><br>当对data上的对象进行修改值的时候会触发它的setter，那么取值的时候自然就会触发getter事件，所以我们只要在最开始进行一次render，那么所有被渲染所依赖的data中的数据就会被getter收集到Dep的subs中去。在对data中的数据进行修改的时候setter只会触发Dep的subs的函数。<br><img src="/1110837624/1.png" alt><br><img src="/1110837624/2.png" alt></p><blockquote><p>关于为什么Dep.target销毁，获取数据的时候就会触发添加依赖器，会导致多个观察者</p></blockquote><h3 id="订阅者"><a href="#订阅者" class="headerlink" title="订阅者"></a>订阅者</h3><p>订阅者，当依赖收集的时候会addSub到sub中，在修改data中数据的时候会触发dep对象的notify，通知所有Watcher对象去修改对应视图。</p><blockquote><p>解析指令时添加订阅者<br><img src="/1110837624/3.png" alt></p></blockquote><h3 id="编译部分"><a href="#编译部分" class="headerlink" title="编译部分"></a>编译部分</h3><p>通过使用Fragment进行简单的测试，并没有实现虚拟节点转化到编译</p><blockquote><p>节点转换   DOM Node –&gt; Fragment<br><img src="/1110837624/4.png" alt></p></blockquote><blockquote><p>解析指令 v-directive –&gt; directive<br><img src="/1110837624/5.png" alt><br>指令封装    getDirective –&gt; parseDirective –&gt; removeDirective<br><img src="/1110837624/6.png" alt><br>数据的双向绑定 监听input时间更新数据<br><img src="/1110837624/7.png" alt><br>数据代理 this.$data.message –&gt; this.message<br><img src="/1110837624/8.png" alt></p></blockquote><h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><blockquote><p>什么时候会触发数据绑定<br><img src="/1110837624/9.png" alt></p></blockquote><p>首先通过一次渲染操作触发Data的getter（这里保证只有视图中需要被用到的data才会触发getter）进行依赖收集，这时候其实Watcher与data可以看成一种被绑定的状态（实际上是data的闭包中有一个Deps订阅者，在修改的时候会通知所有的Watcher观察者），在data发生变化的时候会触发它的setter，setter通知Watcher，Watcher进行回调通知组件重新渲染的函数，之后根据diff算法来决定是否发生视图的更新。</p><h3 id="如下代码，while是死循环？"><a href="#如下代码，while是死循环？" class="headerlink" title="如下代码，while是死循环？"></a>如下代码，while是死循环？</h3><p><img src="/1110837624/10.png" alt><br><img src="/1110837624/11.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;style&gt;
    img {
        width: 100%;
    }
&lt;/style&gt;
&lt;p&gt;Vue采用数据劫持配合发布者-订阅者模式的方式，通过Object.defineProperty来配置getter和setter来劫持数据的变化，在数据变动时，发布消息给依赖收集器，去通知观察者做出对应的回调函数，去更新视图。&lt;br&gt;MVVM 作为绑定的入口，整合Observer,Compile和Watcher三者，通过Observer来监听model数据变化，通过Compile来解析编译模板指令，最终利用Watcher搭起Observer,Compile之间的通信桥梁，达到数据数据变化 =&amp;gt; 视图更新，视图的交互变化 =&amp;gt; 数据model变更的双向绑定效果&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="vue.js" scheme="https://www.wchen.club/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>vue.js踩坑经历</title>
    <link href="https://www.wchen.club/3958771955.html"/>
    <id>https://www.wchen.club/3958771955.html</id>
    <published>2020-03-17T12:54:21.000Z</published>
    <updated>2020-03-17T13:17:44.348Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/vuejs.png" alt="vuejs"></p><a id="more"></a><h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><p><img src="/images/vue.js.png" alt="vuejs"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/vuejs.png&quot; alt=&quot;vuejs&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="vue.js" scheme="https://www.wchen.club/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户管理</title>
    <link href="https://www.wchen.club/4012342053.html"/>
    <id>https://www.wchen.club/4012342053.html</id>
    <published>2020-02-15T14:31:10.000Z</published>
    <updated>2020-02-18T03:22:04.957Z</updated>
    
    <content type="html"><![CDATA[<p>用户管理是Linux系统工作重要的一环，用户管理包括用户与组账号的管理。所谓账号管理，是指账号的新增、删除和修改、账号规划以及权限的授予等问题。</p><a id="more"></a><style>    th:first-child{        width: 20%;    }    th:not(:first-child){        width: 40%;    }</style><h2 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h2><table><thead><tr><th>命令</th><th>描述</th><th>常用命令</th></tr></thead><tbody><tr><td>useradd</td><td>用户添加</td><td>useradd -d userdir username</td></tr><tr><td>adduser</td><td>用户提示输入</td><td>adduser username</td></tr><tr><td>usermod</td><td>对useradd产生的重新设置</td><td>usermod -s shell</td></tr><tr><td>userdel</td><td>删除用户</td><td>userdel -r username</td></tr><tr><td>groupadd</td><td>组添加</td><td>groupadd groupname</td></tr><tr><td>groupmod</td><td>对组修改</td><td></td></tr><tr><td>groupdel</td><td>删除组</td><td>groupdel username</td></tr><tr><td>id</td><td>显示用户当前的uid、gid和用户所属的组列表</td><td>id username</td></tr><tr><td>w/who</td><td>显示登录用户及相关信息</td><td>w username,who</td></tr><tr><td>su</td><td>切换用户</td><td>su username</td></tr><tr><td>sudo</td><td>普通用户执行管理员命令</td><td>sudo command</td></tr><tr><td>newusers/chpasswd</td><td>成批添加用户/密码</td><td>newusers &lt; users/ chpasswd &lt; passwds</td></tr></tbody></table><h2 id="用户配置文件"><a href="#用户配置文件" class="headerlink" title="用户配置文件"></a>用户配置文件</h2><blockquote><p>账号信息 /etc/passwd (user:passwd:UID:GID:comment:DIR:shell)<br>口令文件 /etc/shadow (user:passwd:::::::)</p></blockquote><h2 id="用户CURD"><a href="#用户CURD" class="headerlink" title="用户CURD"></a>用户CURD</h2><p>用户目录文件 /home/dir 或 /root,shell文件 /bin/shell 或 /bin/bash</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加用户</span></span><br><span class="line">useradd -d&lt;dirname&gt; -s&lt;shellname&gt; -g&lt;GID&gt; -c&lt;comment&gt; -u&lt;UID&gt; -e&lt;expired&gt; username</span><br><span class="line">adduser username <span class="comment"># 提示输入</span></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">passwd username </span><br><span class="line"><span class="comment"># 切换用户</span></span><br><span class="line">su username</span><br><span class="line"><span class="comment"># 查看当前用户</span></span><br><span class="line">who</span><br><span class="line">w username </span><br><span class="line">finger username</span><br><span class="line">who -uH <span class="comment"># 显示当前用户包括标题</span></span><br><span class="line"><span class="comment"># 修改用户</span></span><br><span class="line">usermod -d&lt;dirname&gt; -s&lt;shellname&gt; -g&lt;GID&gt; -c&lt;comment&gt; -u&lt;UID&gt; -e&lt;expired&gt; username</span><br><span class="line">usermod -l old_username new_username <span class="comment"># 重命名用户</span></span><br><span class="line"><span class="comment"># 删除用户</span></span><br><span class="line">userdel username</span><br><span class="line">userdel -r username <span class="comment"># 删除用户目录</span></span><br></pre></td></tr></table></figure><h2 id="用户组配置文件"><a href="#用户组配置文件" class="headerlink" title="用户组配置文件"></a>用户组配置文件</h2><blockquote><p>/etc/group  groupname:passwd:groupid:users</p></blockquote><h2 id="用户组CRUD"><a href="#用户组CRUD" class="headerlink" title="用户组CRUD"></a>用户组CRUD</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 添加用户组</span></span><br><span class="line">groupadd groupname</span><br><span class="line"><span class="comment">## 重命名用户组</span></span><br><span class="line">groupmod -n old_groupname new_groupname</span><br><span class="line"><span class="comment">## 删除用户组</span></span><br><span class="line">groupdel groupname</span><br></pre></td></tr></table></figure><h3 id="用户和组信息"><a href="#用户和组信息" class="headerlink" title="用户和组信息"></a>用户和组信息</h3><blockquote><p>id username</p></blockquote><h2 id="权限命令"><a href="#权限命令" class="headerlink" title="权限命令"></a>权限命令</h2><ul><li><code>chmod</code>:改变文件或目录权限</li><li><code>chown</code>:改变文件或目录的属主（所有者），chown -R dir username</li><li><code>chgrp</code>:改变文件或目录所属的组</li><li><code>umask</code>:设置文件的缺省生成掩码</li></ul><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><p><img src="/images/permission.png" alt="permission"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@root:~<span class="comment"># ll</span></span><br><span class="line">total 43</span><br><span class="line">drwx------  19 root root  4096 Feb 15 20:34 ./</span><br><span class="line">drwxr-xr-x  22 root root  4096 Feb  3 22:10 ../</span><br><span class="line">-rw-------   1 root root 30166 Feb 15 23:09 .bash_history</span><br><span class="line">-rw-r--r--   1 root root  3188 Oct 10 10:26 .bashrc</span><br></pre></td></tr></table></figure><table><thead><tr><th>权限</th><th>二进制 / 八进制</th><th>描述</th></tr></thead><tbody><tr><td>—</td><td>000 / 0</td><td>无权限</td></tr><tr><td>–x</td><td>001 / 1</td><td>只有执行权限</td></tr><tr><td>-w-</td><td>010 / 2</td><td>只有写入权限</td></tr><tr><td>-wx</td><td>011 / 3</td><td>写和执行权限</td></tr><tr><td>r–</td><td>100 / 4</td><td>读权限</td></tr><tr><td>r-x</td><td>101 / 5</td><td>读取和执行的权限</td></tr><tr><td>rw-</td><td>110 / 6</td><td>读取的写入的权限</td></tr><tr><td>rwx</td><td>111 / 7</td><td>所有权限</td></tr></tbody></table><blockquote><p>例子 # ———- 1 root root 0 Feb 17 18:43 ./file.txt</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -rwxrwxrwx 1 root root 0 Feb 17 18:43 ./file.txt</span></span><br><span class="line">chmod 777 file.txt</span><br><span class="line"><span class="comment">#-rw-rw-rw- 1 root root 0 Feb 17 18:43 ./file.txt</span></span><br><span class="line">chmod -x file.txt 或 chmod 666 file.txt</span><br><span class="line"><span class="comment">#--w--w--w- 1 root root 0 Feb 17 18:43 ./file.txt</span></span><br><span class="line">chmod -r file.txt 或 chmod 222 file.txt</span><br><span class="line"><span class="comment">#-rwxr-xr-x 1 root root 0 Feb 17 18:43 ./file.txt*</span></span><br><span class="line">chmod 755 ./file.txt</span><br></pre></td></tr></table></figure><h2 id="用户目录"><a href="#用户目录" class="headerlink" title="用户目录"></a>用户目录</h2><blockquote><p>目录拥有者 chown -R dir username</p></blockquote><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="Linux用户和权限管理看了你就会用啦">Linux用户和权限管理看了你就会用啦</a><br><a href="https://www.jianshu.com/p/8566a74e77be" target="_blank" rel="noopener">理解Linux文件权限</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用户管理是Linux系统工作重要的一环，用户管理包括用户与组账号的管理。所谓账号管理，是指账号的新增、删除和修改、账号规划以及权限的授予等问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.wchen.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.wchen.club/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>网站添加SSL证书</title>
    <link href="https://www.wchen.club/3406349653.html"/>
    <id>https://www.wchen.club/3406349653.html</id>
    <published>2020-02-13T07:47:46.000Z</published>
    <updated>2020-02-17T05:29:24.631Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP协议使用明文传输数据，访问网站会提示网站不安全字样，而HTTPS协议解决这一缺陷。HTTPS协议在HTTP协议的增加SSL协议（HTTPS=HTTP+SSL），SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。</p><a id="more"></a><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>前往网站<a href="https://homenew.console.aliyun.com/" target="_blank" rel="noopener">https://homenew.console.aliyun.com/</a>搜索SSL证书，选择免费购买免费个人证书可获得一年免费SSL证书。</p><h2 id="下载证书并上传到服务器"><a href="#下载证书并上传到服务器" class="headerlink" title="下载证书并上传到服务器"></a>下载证书并上传到服务器</h2><p><img src="/images/ssl-download.png" alt="ssl-download"></p><blockquote><p>新建目录 mkdir -p /etc/nginx/cert （位置随意）<br>上传文件 scp local_addr/*  server_user@ip_addr:/etc/nginx/cert/</p></blockquote><h2 id="nginx开启https证书"><a href="#nginx开启https证书" class="headerlink" title="nginx开启https证书"></a>nginx开启https证书</h2><p>编辑配置文件 (/etc/nginx/sites-available/default) 位置不定<br>配置文件有SSL的配置取消注释修改</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SSL configuration</span></span><br><span class="line">listen 443 ssl default_server;</span><br><span class="line">listen [::]:443 ssl default_server;</span><br><span class="line">server_name domain_name <span class="comment">#域名配置</span></span><br><span class="line">ssl on; <span class="comment"># 开启SSL</span></span><br><span class="line">ssl_certificate  /etc/nginx/cert/a.pem; <span class="comment"># 上传文件</span></span><br><span class="line">ssl_certificate_key  /etc/nginx/cert/b.key; <span class="comment"># 上传文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 后面复制即可</span></span><br><span class="line"><span class="comment"># ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">ssl_session_timeout  5m;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line"><span class="comment">#ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">ssl_prefer_server_ciphers  on;</span><br></pre></td></tr></table></figure><h2 id="nginx端口重定向"><a href="#nginx端口重定向" class="headerlink" title="nginx端口重定向"></a>nginx端口重定向</h2><p>HTTP协议默认端口80,HTTPS协议默认端口443</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 80端口重定向到443端口</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line">        server_name domain_name;</span><br><span class="line">        rewrite ^(.*)$ https://<span class="variable">$&#123;server_name&#125;</span><span class="variable">$1</span> permanent; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>配置完成之后重启nginx(nginx -s reload)。如果不能访问先不要慌，仔细排查是否配置出现问题，如果没有问题查看安全组规则是否开启（使用阿里云服务器经常会遇到这个问题）。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://juejin.im/post/5b88b58151882542db3bedf7" target="_blank" rel="noopener">阿里云配置HTTPS</a><br><a href="https://yq.aliyun.com/articles/707479" target="_blank" rel="noopener">阿里云nginx服务器如何配置ssl证书,让你的网站添加https</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP协议使用明文传输数据，访问网站会提示网站不安全字样，而HTTPS协议解决这一缺陷。HTTPS协议在HTTP协议的增加SSL协议（HTTPS=HTTP+SSL），SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="https" scheme="https://www.wchen.club/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>FRP内网穿透</title>
    <link href="https://www.wchen.club/918088272.html"/>
    <id>https://www.wchen.club/918088272.html</id>
    <published>2020-02-09T05:48:06.000Z</published>
    <updated>2020-02-17T05:22:21.041Z</updated>
    
    <content type="html"><![CDATA[<p>frp（fast-reserve-proxy） 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。 (<a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">官方文档</a>)</p><a id="more"></a><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><img width="100%" src="/images/frp.png" alt="frp"><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><blockquote><p>公网服务器（阿里云服务器）<br>内网服务器(本地客服端)</p></blockquote><h3 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h3><blockquote><p>购买域名<br>域名解析</p></blockquote><p><img src="/images/dns.png" alt="dns"></p><h3 id="windows开启openssh"><a href="#windows开启openssh" class="headerlink" title="windows开启openssh"></a>windows开启openssh</h3><blockquote><p>开启Windows中ssh服务 net start sshd<br>关闭Windows中ssh服务 net stop sshd<br>查看用户 net user<br>测试登录 ssh -p port_number user@localhost</p></blockquote><h2 id="下载-https-github-com-fatedier-frp-releases"><a href="#下载-https-github-com-fatedier-frp-releases" class="headerlink" title="下载(https://github.com/fatedier/frp/releases)"></a>下载(<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases</a>)</h2><p>下载后两端文件目录结构差不多，公网服务器端需要文件frps.ini、frps 和sytemd，内网服务端 frpc.ini、frpc、systemd,其余文件可以删除。</p><blockquote><p>本地端 windows<a href="https://github.com/fatedier/frp/releases/download/v0.31.2/frp_0.31.2_windows_amd64.zip" target="_blank" rel="noopener">直接下载</a><br>服务端 wget <a href="https://github.com/fatedier/frp/releases/download/v0.31.2/frp_0.31.2_linux_amd64.tar.gz" target="_blank" rel="noopener">https://github.com/fatedier/frp/releases/download/v0.31.2/frp_0.31.2_linux_amd64.tar.gz</a> &amp;&amp; mkdir -p /usr/local/frp &amp;&amp; tar -zxvf frp_0.31.2_linux_amd64.tar.gz -C /usr/local/frp</p></blockquote><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>注意阿里云服务器需要配置阿里云安全组规则</p><h3 id="ssh配置"><a href="#ssh配置" class="headerlink" title="ssh配置"></a>ssh配置</h3><p>配置完成后<a href="#启动">启动服务</a>,在使用命令ssh -oPort=6000 user@public_addr测试配置成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000 <span class="comment">#绑定端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x <span class="comment">#公网服务器地址</span></span><br><span class="line">server_port = 7000 <span class="comment">#服务器绑定的端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh conf</span></span><br><span class="line">[ssh]</span><br><span class="line"><span class="built_in">type</span> = tcp <span class="comment">#服务类型</span></span><br><span class="line">local_ip = 127.0.0.1 <span class="comment">#本地地址</span></span><br><span class="line">local_port = 22 <span class="comment">#绑定本地地址</span></span><br><span class="line">remote_port = 6000 <span class="comment">#远程地址</span></span><br></pre></td></tr></table></figure><h3 id="DDNS配置"><a href="#DDNS配置" class="headerlink" title="DDNS配置"></a>DDNS配置</h3><p>动态域名配置需要关于域名的相关<a href="#域名配置">域名配置</a>，配置完成之后把域名对应填入custom_domains</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">vhost_http_port = 8080 <span class="comment"># 访问公网8080端口映射到内网80端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line"><span class="comment"># web conf</span></span><br><span class="line">[web]</span><br><span class="line"><span class="built_in">type</span> = http  <span class="comment"># http协议</span></span><br><span class="line">local_port = 80   <span class="comment"># 内网服务器端口</span></span><br><span class="line">custom_domains = www.yourdomain.com <span class="comment"># 配置域名指向公网服务器，必须已经备案</span></span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><blockquote><p>公网服务器 cd /usr/local/frp &amp;&amp; ./frps -c ./frps.ini<br>内网服务器 cd install_addr &amp;&amp; frpc -c ./frpc.ini</p></blockquote><h2 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h2><blockquote><p>公网服务器 nohup ./frps -c frps.ini &gt;/dev/null 2&gt;&amp;1 &amp;</p><blockquote><p>/dev/null 2&gt;&amp;1 &amp;  表示丢弃</p></blockquote></blockquote><h3 id="内网服务器"><a href="#内网服务器" class="headerlink" title="内网服务器"></a>内网服务器</h3><ul><li>linunx  nohup ./frpc -c frpc.ini &gt;/dev/null 2&gt;&amp;1 &amp;</li><li>win10 <a href="https://lo-li.cn/239" target="_blank" rel="noopener">https://lo-li.cn/239</a></li></ul><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>根据上面配置端口访问，端口自定义，注意安全组规则需要配置</p><blockquote><p>ssh访问 ssh -p 7000 <a href="mailto:user_name@x.x.x.x">user_name@x.x.x.x</a><br>web访问 <a href="http://www.yourdomain.com:8080" target="_blank" rel="noopener">www.yourdomain.com:8080</a></p></blockquote><h3 id="ERR-UNSAFE-PORT错误"><a href="#ERR-UNSAFE-PORT错误" class="headerlink" title="ERR_UNSAFE_PORT错误"></a>ERR_UNSAFE_PORT错误</h3><p>6666-6669这几个端口是IRC(Internet Relay Chat)协议使用的缺省端口，存在很大的安全风险，出于安全考虑，Chrome、Firefox都禁止了对6666端口的访问。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">frp官方参考文献</a><br><a href="https://blog.csdn.net/u013144287/article/details/78589643/" target="_blank" rel="noopener">十分钟教你配置frp实现内网穿透</a><br><a href="https://www.applenice.net/2019/06/04/ERR-UNSAFE-PORT-On-Browser/" target="_blank" rel="noopener">ERR_UNSAFE_PORT</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;frp（fast-reserve-proxy） 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。 (&lt;a href=&quot;https://github.com/fatedier/frp/blob/master/README_zh.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;)&lt;/p&gt;
    
    </summary>
    
    
      <category term="server" scheme="https://www.wchen.club/categories/server/"/>
    
    
      <category term="Linux" scheme="https://www.wchen.club/tags/Linux/"/>
    
      <category term="内网穿透" scheme="https://www.wchen.club/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
      <category term="windows" scheme="https://www.wchen.club/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>hexo发布到服务器</title>
    <link href="https://www.wchen.club/4021348188.html"/>
    <id>https://www.wchen.club/4021348188.html</id>
    <published>2020-02-01T12:09:14.000Z</published>
    <updated>2020-02-26T12:43:20.154Z</updated>
    
    <content type="html"><![CDATA[<p>学习了一段时间搭建博客，从最初的landscape主题到hexo-next，修改配置文件和改动样式，终于能在GitHub上跑起来了。搭建完访问自己博客的时候，发现每次都要转动半天。苦恼了半天，最终决定把博客搭建到阿里云服务器上</p><a id="more"></a><h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><ol><li><a href="#本地搭建">本地环境搭建</a></li><li><a href="#远程服务器搭建">远程服务器搭建(ubuntu)</a></li><li><a href="#hexo自动化发布">使用hexo自动化发布 hexo deploy</a></li></ol><h2 id="本地搭建"><a href="#本地搭建" class="headerlink" title="本地搭建"></a>本地搭建</h2><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">初始博客 hexo init</span><br><span class="line">新建文章 hexo new <span class="string">"new page"</span></span><br><span class="line">清理生成 hexo clean &amp;&amp; hexo generate(hexo clean &amp;&amp; hexo g)</span><br><span class="line">启动服务 hexo serve(hexo s)</span><br></pre></td></tr></table></figure><h3 id="ssh配置"><a href="#ssh配置" class="headerlink" title="ssh配置"></a>ssh配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh生成 ssh-keygen -t rsa -C <span class="string">"youremail@email.com"</span></span><br><span class="line">目录结构</span><br><span class="line">.ssh(windows在C:/Users/user_name/.ssh linux在~/.ssh)</span><br><span class="line">   |.id_rsa.pub.swp</span><br><span class="line">   |id_rsa          私钥</span><br><span class="line">   |id_rsa.pub      公钥</span><br><span class="line">   |known_hosts</span><br></pre></td></tr></table></figure><h2 id="远程服务器搭建"><a href="#远程服务器搭建" class="headerlink" title="远程服务器搭建"></a>远程服务器搭建</h2><h3 id="git和nginx安装配置"><a href="#git和nginx安装配置" class="headerlink" title="git和nginx安装配置"></a>git和nginx安装配置</h3><blockquote><p>nginx默认配置文件 /etc/nginx/sites-available/default</p></blockquote><p><img src="/images/nginx-default.png" alt="/etc/nginx/sites-available/default"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y git</span><br><span class="line">apt-get install -y nginx</span><br><span class="line">git config --global user.email your_config_email </span><br><span class="line">git config --global user.name your_config_username</span><br></pre></td></tr></table></figure><h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加用户 adduser git</span><br><span class="line">修改密码 passwd git</span><br></pre></td></tr></table></figure><h3 id="目录部署"><a href="#目录部署" class="headerlink" title="目录部署"></a>目录部署</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">切换git用户 su git</span><br><span class="line">博客部署目录 mkdir -p /home/git/www/hexo</span><br><span class="line">git仓库目录 mkdir -p /home/git/repo/blog.git</span><br><span class="line">git裸库初始化 <span class="built_in">cd</span> /home/git/repo/blog.git &amp;&amp; git init --bare </span><br><span class="line">仓库hooks设置 <span class="built_in">cd</span> /home/git/repo/blog.git/hooks &amp;&amp; touch post-receive &amp;&amp; chmod +x post-revice</span><br></pre></td></tr></table></figure><h3 id="post-receive添加脚本"><a href="#post-receive添加脚本" class="headerlink" title="post-receive添加脚本"></a>post-receive添加脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/home/git/www/hexo --git-dir=/home/git/repo/blog.git  checkout -f</span><br></pre></td></tr></table></figure><h3 id="授权和ssh测试"><a href="#授权和ssh测试" class="headerlink" title="授权和ssh测试"></a>授权和ssh测试</h3><blockquote><p>复制本地端的公钥到远程服务器/home/git/authorized_keys中,测试是否能够免密登录远程 ssh -v git@ip_address</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">切换root <span class="built_in">exit</span> </span><br><span class="line">chown -R git:git /home/git</span><br><span class="line">chmod -R 755 /home/git/www/hexo</span><br></pre></td></tr></table></figure><h3 id="禁用git的登陆权限"><a href="#禁用git的登陆权限" class="headerlink" title="禁用git的登陆权限"></a>禁用git的登陆权限</h3><blockquote><p>为了安全考虑，禁用GIT用户的SHELL 登录权限配置,查看git-shell执行文件目录 which git-shell,修改/etc/passwd文件下git用户/bin/bash为git-shell执行文件目录。一般/bin/bash为/usr/bin/git-shell</p></blockquote><h2 id="hexo自动化发布"><a href="#hexo自动化发布" class="headerlink" title="hexo自动化发布"></a>hexo自动化发布</h2><blockquote><p>为了方便，建立两个发布源 github和远程服务器</p></blockquote><img width="100%" src="/images/hexo-deploy.png" alt="hexo-deploy"><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90" target="_blank" rel="noopener">关于git hooks</a><br><a href="https://www.jianshu.com/p/70bf58c48010" target="_blank" rel="noopener">HEXO 部署到云服务器详细指南</a><br><a href="https://www.jianshu.com/p/1d67b764dfce" target="_blank" rel="noopener">配置SSH的正确方式</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习了一段时间搭建博客，从最初的landscape主题到hexo-next，修改配置文件和改动样式，终于能在GitHub上跑起来了。搭建完访问自己博客的时候，发现每次都要转动半天。苦恼了半天，最终决定把博客搭建到阿里云服务器上&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="hexo" scheme="https://www.wchen.club/tags/hexo/"/>
    
      <category term="css" scheme="https://www.wchen.club/tags/css/"/>
    
      <category term="前端" scheme="https://www.wchen.club/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://www.wchen.club/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>BLOG README</title>
    <link href="https://www.wchen.club/1256466565.html"/>
    <id>https://www.wchen.club/1256466565.html</id>
    <published>2020-01-28T03:05:32.000Z</published>
    <updated>2020-02-17T05:29:33.707Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/wchen-blog.png" alt="wchen-blog"></p><h2 id="wchen-blog"><a href="#wchen-blog" class="headerlink" title="wchen blog"></a>wchen blog</h2><blockquote><p><a href="https://chenwchen.github.io" target="_blank" rel="noopener">https://chenwchen.github.io</a><br>本博客基于hexo博客框架，主题来源于githu开源主题<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a></p></blockquote><a id="more"></a><h2 id="安装node-js-hexo是基于node-js的博客框架"><a href="#安装node-js-hexo是基于node-js的博客框架" class="headerlink" title="安装node.js(hexo是基于node.js的博客框架)"></a>安装node.js(hexo是基于node.js的博客框架)</h2><ol><li><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">安装node.js</a>,下一步，下一步……</li><li>验证安装,打开控制台（windows平台cmd）,键入npm -v，显示版本号为安装成功</li><li>使用npm(nodejs包管理器)安装hexo</li></ol><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">全局安装和本地安装的区别:全局安装可以在命令可以在控制台直接使用</span><br><span class="line">cnpm安装 npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line">全局安装 npm install -g plugin </span><br><span class="line">局部安装 npm install --save plugin</span><br><span class="line">显示安装 npm list -g --depth 0 || npm list --depth 0</span><br><span class="line">移除安装 npm remove -g plugin || npm remove plugin</span><br><span class="line">更新npm npm install -g npm</span><br><span class="line">一般使用淘宝进行cnpm安装（npm下载慢，容易被墙），只是为了通用例子使用npm</span><br></pre></td></tr></table></figure></blockquote><ol start="4"><li>hexo 命令使用</li></ol><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">全局安装hexo npm install -g hexo</span><br><span class="line">选择目录 mkdir blog_dir &amp;&amp; cd blog_dir</span><br><span class="line">初始化 hexo init</span><br><span class="line">清理博客 hexo clean </span><br><span class="line">生成博客 hexo generate  || hexo g</span><br><span class="line">开启服务 hexo serve || hexo s</span><br><span class="line">发布github 修改站点_config.yml中deploy相应的内容后使用命令hexo deploy</span><br><span class="line">集成命令 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></blockquote><ol start="5"><li>选择合适的主题下载到 ./themes/themes_name 修改站点_config.yml中theme为theme_name</li><li><a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">hexo-next主题的相关修改</a></li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a><br><a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">live2d</a><br><a href="https://theme-next.iissnan.com/getting-started.htm" target="_blank" rel="noopener">hexo官方文档</a><br><a href="https://yfzhou.coding.me/2018/08/08/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E6%B7%BB%E5%8A%A0%E7%BD%91%E9%A1%B5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E5%8A%9F%E8%83%BD%EF%BC%89/" target="_blank" rel="noopener">hexo-next添加音乐播放器</a><br><a href="https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD%EF%BC%89/" target="_blank" rel="noopener">代码复制</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/wchen-blog.png&quot; alt=&quot;wchen-blog&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;wchen-blog&quot;&gt;&lt;a href=&quot;#wchen-blog&quot; class=&quot;headerlink&quot; title=&quot;wchen blog&quot;&gt;&lt;/a&gt;wchen blog&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://chenwchen.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://chenwchen.github.io&lt;/a&gt;&lt;br&gt;本博客基于hexo博客框架，主题来源于githu开源主题&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-theme-next&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="node.js" scheme="https://www.wchen.club/categories/node-js/"/>
    
    
      <category term="blog" scheme="https://www.wchen.club/tags/blog/"/>
    
      <category term="hexo" scheme="https://www.wchen.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>CSS选择器</title>
    <link href="https://www.wchen.club/3063422747.html"/>
    <id>https://www.wchen.club/3063422747.html</id>
    <published>2020-01-24T07:47:46.000Z</published>
    <updated>2020-02-17T05:29:37.456Z</updated>
    
    <content type="html"><![CDATA[<p>灵活的使用选择器可以美化html的格式，对于一些复杂的结构可以使用不同的选择器的变换来选择对应的元素，而不至于对每个元素添加id选择器或class选择器</p><a id="more"></a><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><table><thead><tr><th align="left">选择器</th><th align="left">例子</th><th align="left">例子描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">标签选择器</td><td align="left">h1</td><td align="left">选择标签h1元素</td><td align="left"><code>h1{background:red;}</code></td></tr><tr><td align="left">id选择器</td><td align="left">#id_name</td><td align="left">选择id=”id_name”的所有元素</td><td align="left"><code>#id_name{background:red;}</code></td></tr><tr><td align="left">类选择器</td><td align="left">.class_name</td><td align="left">选择class=”class_name”的所有元素</td><td align="left"><code>.class_name{background:red;}</code></td></tr><tr><td align="left">后代选择器</td><td align="left">div span</td><td align="left">选择&lt;div&gt;下的所有&lt;span&gt;标签</td><td align="left"><code>div span{color:red;}</code></td></tr><tr><td align="left">分组选择器</td><td align="left">div,ul,h1</td><td align="left">选择&lt;div&gt;，&lt;ul&gt;，&lt;h1&gt;元素</td><td align="left"><code>div,ul,h1{margin:0px;margin:0px}</code></td></tr><tr><td align="left">子类选择器</td><td align="left">选择父元素为div&gt;p</td><td align="left">&lt;div&gt;下的所有&lt;p&gt;标签</td><td align="left">div&gt;p{color:red;}</td></tr></tbody></table><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><table><thead><tr><th align="left">选择器</th><th align="left">例子</th><th align="left">例子描述</th></tr></thead><tbody><tr><td align="left">[attribute]</td><td align="left">[target]</td><td align="left">选择带有 target 属性所有元素</td></tr><tr><td align="left">[attribute=value]</td><td align="left">[target=_blank]</td><td align="left">选择 target=”_blank” 的所有元素</td></tr><tr><td align="left">[attribute~=value]</td><td align="left">[title~=flower]</td><td align="left">选择 title 属性包含单词 “flower” 的所有元素</td></tr><tr><td align="left">[attribute=|value]</td><td align="left">[lang|=en]</td><td align="left">选择 lang 属性值以 “en” 开头的所有元素</td></tr></tbody></table><h2 id="兄弟选择器"><a href="#兄弟选择器" class="headerlink" title="兄弟选择器"></a>兄弟选择器</h2><blockquote><p>两种选择器+ 和 ~</p><ul><li>h1 + p:选择同一父元素下h紧接着的第一个p元素</li><li>h1 ~ p:选择同一父元素下h紧接着的所有p元素</li></ul></blockquote><h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h2><h3 id="1、根据相同父元素紧接着的所有标签计数"><a href="#1、根据相同父元素紧接着的所有标签计数" class="headerlink" title="1、根据相同父元素紧接着的所有标签计数"></a>1、根据相同父元素紧接着的所有标签计数</h3><blockquote><ul><li>:first-child: nth-child(1) 同一个父元素下的首个元素，如果不满足则不选择</li><li>:last-child: nth-child(count)同一父元素下的尾部元素</li><li>:nth-child(n):  同一父元素下的第n个元素 ，nth-child(2n)选择奇</li></ul></blockquote><h3 id="2、根据相同父元素下的相同类型标签计数"><a href="#2、根据相同父元素下的相同类型标签计数" class="headerlink" title="2、根据相同父元素下的相同类型标签计数"></a>2、根据相同父元素下的相同类型标签计数</h3><blockquote><ul><li>:first-of-type: nth-of-type(1) :同一父元素下被选元素的首个元素</li><li>:last-of-type: nth-of-type(count):  同一父元素下被选元素的尾部元素</li><li>:nth-of-type(n) :同一父元素下相同类型的标签的第n个元素</li></ul></blockquote><h3 id="4、事件类"><a href="#4、事件类" class="headerlink" title="4、事件类"></a>4、事件类</h3><table><thead><tr><th align="left">选择器</th><th align="left">例子</th><th>例子描述</th></tr></thead><tbody><tr><td align="left">:link</td><td align="left">a:link</td><td>选择所有未被访问的链接</td></tr><tr><td align="left">:visited</td><td align="left">a:visited</td><td>选择所有已被访问的链接</td></tr><tr><td align="left">:active</td><td align="left">a:active</td><td>选择活动链接</td></tr><tr><td align="left">:hover</td><td align="left">a:hover</td><td>选择鼠标指针位于其上的链接</td></tr><tr><td align="left">:focus</td><td align="left">input:focus</td><td>选择获得焦点的 input 元素</td></tr></tbody></table><h3 id="5、表单类"><a href="#5、表单类" class="headerlink" title="5、表单类"></a>5、表单类</h3><table><thead><tr><th align="left">选择器</th><th align="left">例子</th><th align="left">例子描述</th></tr></thead><tbody><tr><td align="left">:checked</td><td align="left">input:checked</td><td align="left">&lt;input&gt;元素中被选中状态的元素</td></tr><tr><td align="left">:disabled</td><td align="left">input:disabled</td><td align="left">&lt;input&gt;元素中禁用的元素</td></tr><tr><td align="left">:enabled</td><td align="left">input:enabled</td><td align="left">&lt;input&gt;元素中启用的元素</td></tr></tbody></table><h3 id="6、其他"><a href="#6、其他" class="headerlink" title="6、其他"></a>6、其他</h3><blockquote><ul><li>:not : 除了被选择的元素，选择非第一个元素:not(:first-child)</li><li>* ：表示选择所有元素</li></ul></blockquote><h3 id="7、伪元素"><a href="#7、伪元素" class="headerlink" title="7、伪元素"></a>7、伪元素</h3><blockquote><ul><li>::after</li><li>::before</li><li>::selection</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/*文本被选中之后才能有效果*/</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.first-text</span><span class="selector-pseudo">::selection</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span>:<span class="selector-id">#ff0000</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/*在class="second-text"前面插入文本*/</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.second-text</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">content</span><span class="selector-pseudo">:"</span>这是<span class="selector-tag">before</span>文本";</span></span><br><span class="line"><span class="css"> <span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/*在class="second-text"之后插入文本*/</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.second-text</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">content</span><span class="selector-pseudo">:"</span>这是<span class="selector-tag">after</span>文本";</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:yellow</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"first-text"</span>&gt;</span>这是第一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"second-text"</span>&gt;</span>这是第二段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="first-child和-first-of-type的区别"><a href="#first-child和-first-of-type的区别" class="headerlink" title=":first-child和:first-of-type的区别"></a>:first-child和:first-of-type的区别</h3><blockquote><p>first-child选择同一父元素下第一个标签，:first-of-type是同一父元素下被选择元素的第一个元素</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--html代码片段--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span>title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>ul li:first-child:没有元素被选择<br>ul li:first-of-type:1被选择</p></blockquote><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank" rel="noopener">选择器教程</a><br><a href="https://www.cnblogs.com/2050/p/3569509.html" target="_blank" rel="noopener">类选择器:first-child和:first-of-type</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;灵活的使用选择器可以美化html的格式，对于一些复杂的结构可以使用不同的选择器的变换来选择对应的元素，而不至于对每个元素添加id选择器或class选择器&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="css" scheme="https://www.wchen.club/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS动画</title>
    <link href="https://www.wchen.club/414309556.html"/>
    <id>https://www.wchen.club/414309556.html</id>
    <published>2020-01-22T16:35:47.000Z</published>
    <updated>2020-02-17T05:29:36.062Z</updated>
    
    <content type="html"><![CDATA[<p>最近一段时间在研究css的动画的效果，才发现css写出的一些动画效果并不弱于javascript实现，如<a href="https://www.jianshu.com/p/550c11f3b731" target="_blank" rel="noopener">css实现轮播</a>、css实现一些炫酷动画等。研究css的案例，你会发现很多可以使用javascript的代码都可以简化为css实现。</p><a id="more"></a><h2 id="产生动画属性"><a href="#产生动画属性" class="headerlink" title="产生动画属性"></a>产生动画属性</h2><table><thead><tr><th>属性</th><th>作用</th><th>选项</th></tr></thead><tbody><tr><td>transform</td><td>放大、缩小、平移、旋转、倾斜</td><td>scale(value)、translate(x-translate,y-translate)、rotate(deg)、skew(x-deg,y-deg)</td></tr><tr><td>transiton</td><td>属性（width、height、transform、all）、持续时间、时间函数、延迟开始时间</td><td>transition-property、transition-duration、transition-timing-function、transition-delay</td></tr><tr><td>animation</td><td>动画,动画绑定使用@keyframes</td><td>@keyframes name</td></tr></tbody></table><h2 id="transform-演示代码"><a href="#transform-演示代码" class="headerlink" title="transform 演示代码"></a>transform 演示代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--html部分--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>transform-csdn<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/transform-csdn.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"transform"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>原始<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>放大<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>缩小<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>平移<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>旋转<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**css代码部分**/</span></span><br><span class="line"><span class="comment">/*基本样式*/</span></span><br><span class="line"><span class="selector-class">.transform</span>&#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transform</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">40px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line"><span class="attribute">color</span>: white;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*变换</span></span><br><span class="line"><span class="comment"> 主要包括：放大、缩小、平移、旋转、倾斜*/</span></span><br><span class="line"><span class="selector-class">.transform</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line"><span class="comment">/*放大到1.2倍*/</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transform</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span><br><span class="line"><span class="comment">/*缩小到0.8倍*/</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.8</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transform</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span><br><span class="line"><span class="comment">/*y轴平移100px*/</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0px</span>,<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transform</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span><br><span class="line"><span class="comment">/*x轴倾斜10deg*/</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">10deg</span>,<span class="number">0deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transform</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span><br><span class="line"><span class="comment">/*旋转180deg*/</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="transfrom演示图片"><a href="#transfrom演示图片" class="headerlink" title="transfrom演示图片"></a>transfrom演示图片</h2><p><img src="https://img-blog.csdnimg.cn/20200122223628608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODI0NTYy,size_16,color_FFFFFF,t_70" alt="transofrom演示图片"></p><h2 id="transition介绍"><a href="#transition介绍" class="headerlink" title="transition介绍"></a>transition介绍</h2><h3 id="1、缺点"><a href="#1、缺点" class="headerlink" title="1、缺点"></a>1、缺点</h3><blockquote><ol><li>一次性</li><li>只能定义开始状态和结束状态</li><li>单属性变化</li></ol></blockquote><h3 id="2、属性详细介绍"><a href="#2、属性详细介绍" class="headerlink" title="2、属性详细介绍"></a>2、属性详细介绍</h3><blockquote><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>transition-property</td><td>对应过渡属性、width变化、高变化、opacity、all等等</td></tr><tr><td>transition-duration</td><td>过渡持续时间</td></tr><tr><td>transiton-timing-function</td><td>速度时间曲线 ease、linear、ease-in、ease-out、ease-in-out</td></tr><tr><td>transiton-delay</td><td>延迟开始</td></tr><tr><td>transition-timing-function</td><td></td></tr><tr><td><img src="https://img-blog.csdnimg.cn/2020012223414557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODI0NTYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td><td></td></tr></tbody></table></blockquote><h2 id="transition演示代码"><a href="#transition演示代码" class="headerlink" title="transition演示代码"></a>transition演示代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">div</span><br><span class="line">&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span><span class="selector-pseudo">:all</span> <span class="selector-tag">ease</span> 2<span class="selector-tag">s</span> 3<span class="selector-tag">s</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意：<span class="tag">&lt;/<span class="name">b</span>&gt;</span>该实例无法在 Internet Explorer 9 及更早 IE 版本上工作。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>鼠标移动到 div 元素上，查看过渡效果。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意：<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 过渡效果需要等待两秒后才开始。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、animation属性介绍"><a href="#3、animation属性介绍" class="headerlink" title="3、animation属性介绍"></a>3、animation属性介绍</h2><blockquote><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>使用@keyframes绑定的名字</td></tr><tr><td>duration</td><td>动画持续时间</td></tr><tr><td>timing-function</td><td>速度时间函数</td></tr><tr><td>delay</td><td>延迟开始时间</td></tr><tr><td>iteration-count</td><td>循环次数 infinite（无穷）</td></tr><tr><td>direction(方向)</td><td>normal(按时间轴顺序)、reverse(时间轴反方向运行)、alternate(来回往复进行)、alternate-reverse(交替反方向运行再正方向运行）</td></tr><tr><td>play-state</td><td>running、pause</td></tr></tbody></table></blockquote><h2 id="animation代码演示"><a href="#animation代码演示" class="headerlink" title="animation代码演示"></a>animation代码演示</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--html代码部分--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>animation-csdn<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/animation-csdn.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"animation"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**css代码部分**/</span></span><br><span class="line"><span class="selector-class">.animation</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line"><span class="comment">/*名字、持续时间、循环次数、速度时间曲线、方向、运行状态*/</span></span><br><span class="line"><span class="attribute">animation</span>: amimation-demo <span class="number">5s</span> infinite linear running;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> amimation-demo&#123;</span><br><span class="line">25%&#123;</span><br><span class="line"><span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line">50%&#123;</span><br><span class="line"><span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br><span class="line">75%&#123;</span><br><span class="line"><span class="attribute">background</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://juejin.im/post/5b137e6e51882513ac201dfb" target="_blank" rel="noopener">CSS动画：animation、transition、transform、translate</a><br><a href="https://www.runoob.com/css3/css3-tutorial.html" target="_blank" rel="noopener">菜鸟教程教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一段时间在研究css的动画的效果，才发现css写出的一些动画效果并不弱于javascript实现，如&lt;a href=&quot;https://www.jianshu.com/p/550c11f3b731&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;css实现轮播&lt;/a&gt;、css实现一些炫酷动画等。研究css的案例，你会发现很多可以使用javascript的代码都可以简化为css实现。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://www.wchen.club/categories/web/"/>
    
    
      <category term="css3" scheme="https://www.wchen.club/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>代理服务器</title>
    <link href="https://www.wchen.club/3510216051.html"/>
    <id>https://www.wchen.club/3510216051.html</id>
    <published>2019-08-29T14:23:21.000Z</published>
    <updated>2020-02-17T05:29:27.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="协议类型"><a href="#协议类型" class="headerlink" title="协议类型"></a>协议类型</h2><blockquote><p>https协议<br>socks(比http协议代理更底层,socks4、socks5)</p></blockquote><p><a href="https://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">正向代理 （forward proxy）</a>：客户端 –&gt; 代理服务器 –&gt;目标服务器 –&gt;代理服务器 –&gt; 客户端</p><a id="more"></a><blockquote><p>访问访问不到的服务器<br>加速访问<br>缓存<br>客户端授权<br>隐藏访问者行踪</p></blockquote><p><a href="https://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">反向代理 （reverse proxy）</a> ：客户端（不知道目标服务器的存在） –&gt; 代理服务器 –&gt;目标服务器 –&gt;代理服务器 –&gt; 客户端</p><blockquote><p>隐藏服务器<br>负载均衡</p></blockquote><p><a href="https://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">透明代理</a> ： 客户端 –&gt; 代理服务器 （客户端的报文进行包装，不对其修改源IP；对目标服务器的报文进行过滤）–&gt;目标服务器 –&gt;代理服务器 –&gt; 客户端</p><blockquote><p>包装<br>过滤</p></blockquote><p>设置浏览器代理（chrome）</p><blockquote><p>chrome –&gt; 设置 –&gt; 打开代理设置 –&gt; 连接<br>拨号和虚拟专用网设置代理<br>局域网设置代理（如WLAN）</p></blockquote><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://blog.51cto.com/z00w00/1031287" target="_blank" rel="noopener">https://blog.51cto.com/z00w00/1031287</a><br><a href="http://iyiguo.net/blog/2017/03/10/simple-summary-about-proxy/" target="_blank" rel="noopener">http://iyiguo.net/blog/2017/03/10/simple-summary-about-proxy</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;协议类型&quot;&gt;&lt;a href=&quot;#协议类型&quot; class=&quot;headerlink&quot; title=&quot;协议类型&quot;&gt;&lt;/a&gt;协议类型&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;https协议&lt;br&gt;socks(比http协议代理更底层,socks4、socks5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.51cto.com/z00w00/1031287&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;正向代理 （forward proxy）&lt;/a&gt;：客户端 –&amp;gt; 代理服务器 –&amp;gt;目标服务器 –&amp;gt;代理服务器 –&amp;gt; 客户端&lt;/p&gt;
    
    </summary>
    
    
      <category term="server" scheme="https://www.wchen.club/categories/server/"/>
    
    
      <category term="server" scheme="https://www.wchen.club/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>git基本操作</title>
    <link href="https://www.wchen.club/2879265125.html"/>
    <id>https://www.wchen.club/2879265125.html</id>
    <published>2019-08-18T10:53:41.000Z</published>
    <updated>2020-02-20T05:14:09.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git-基本操作"><a href="#Git-基本操作" class="headerlink" title="Git 基本操作"></a>Git 基本操作</h2><blockquote><p>Linux上安装 –dbian系列</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解决依赖</span></span><br><span class="line">apt install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev</span><br><span class="line"><span class="comment"># 安装git</span></span><br><span class="line">apt install git</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立工作目录 : 这里以在用户目录为例，dir_name为任意目录名</span></span><br><span class="line">mkdir ~/dir_name</span><br><span class="line"><span class="comment"># 切换进入目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/dir_name</span><br><span class="line"><span class="comment"># 初始化 : 这里会创建一个.git隐藏目录，使用ls -al可以查看</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 配置用户 : 全局用户和仓库用户，可以只配置其中一种</span></span><br><span class="line"><span class="comment">## 全局配置</span></span><br><span class="line">git config --global user.name = name</span><br><span class="line">git config --global user.email = email</span><br><span class="line"><span class="comment">## 本地配置</span></span><br><span class="line">git config user.name = name</span><br><span class="line">git config user.email = email</span><br><span class="line"><span class="comment">## 远程配置</span></span><br><span class="line">git remote add origin git_addr</span><br></pre></td></tr></table></figure><h2 id="创建文件、添加暂存区、提交到本地库"><a href="#创建文件、添加暂存区、提交到本地库" class="headerlink" title="创建文件、添加暂存区、提交到本地库"></a>创建文件、添加暂存区、提交到本地库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件</span></span><br><span class="line">touch filename</span><br><span class="line"><span class="comment"># 添加到暂存区</span></span><br><span class="line">git add .        <span class="comment"># 添加所有文件</span></span><br><span class="line">git add filename <span class="comment"># 添加文件</span></span><br><span class="line"><span class="comment"># 提交到本地库</span></span><br><span class="line">git commit -m <span class="string">"描述文件信息"</span> filename</span><br></pre></td></tr></table></figure><h2 id="查看状态和日志"><a href="#查看状态和日志" class="headerlink" title="查看状态和日志"></a>查看状态和日志</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看状态 : 文件暂存区情况</span></span><br><span class="line">git status</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">git reflog        <span class="comment"># 简介</span></span><br><span class="line">git <span class="built_in">log</span>           <span class="comment"># 详细</span></span><br><span class="line">git <span class="built_in">log</span> --oneline <span class="comment"># 单行</span></span><br></pre></td></tr></table></figure><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 哈希值 : 使用git reflog 或者 git log可以查看（跳转到固定的版本，可以回退和前进）</span></span><br><span class="line">git reset --hard 哈希值</span><br><span class="line"><span class="comment"># 只能后退，每个^代表后退一个版本</span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"><span class="comment"># 只能后退，后退n个版本</span></span><br><span class="line">git reset --hard HEAD~n</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看分支 : 默认分支为master</span></span><br><span class="line">git branch -v &amp;&amp; git branch</span><br><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch branch_name</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout branch branch_name</span><br><span class="line"><span class="comment"># 合并不同分支的版本</span></span><br><span class="line">git merge branch_name</span><br></pre></td></tr></table></figure><h2 id="克隆、拉取、推送"><a href="#克隆、拉取、推送" class="headerlink" title="克隆、拉取、推送"></a>克隆、拉取、推送</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以使用ssh（需要配置ssh）、https地址</span></span><br><span class="line"><span class="comment">## 远程克隆库</span></span><br><span class="line">git <span class="built_in">clone</span> https_address</span><br><span class="line"><span class="comment">## 拉取</span></span><br><span class="line">git pull https_address</span><br><span class="line"><span class="comment">## 推送</span></span><br><span class="line">git push origin master <span class="comment">## 当地分支推送到远程master分支</span></span><br><span class="line">git push origin local_branch:remote_branch  <span class="comment">## 从当地分支local_branch 推送到远程分支remote_branch</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git-基本操作&quot;&gt;&lt;a href=&quot;#Git-基本操作&quot; class=&quot;headerlink&quot; title=&quot;Git 基本操作&quot;&gt;&lt;/a&gt;Git 基本操作&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Linux上安装 –dbian系列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 解决依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.wchen.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.wchen.club/tags/Linux/"/>
    
      <category term="git" scheme="https://www.wchen.club/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>vim基本操作</title>
    <link href="https://www.wchen.club/1704325616.html"/>
    <id>https://www.wchen.club/1704325616.html</id>
    <published>2019-08-18T09:54:27.000Z</published>
    <updated>2020-02-20T04:54:46.080Z</updated>
    
    <content type="html"><![CDATA[<p>vim的基本操作分为打开文件、编辑、复制、粘贴、删除、撤回、查找、替换、保存、另存为。vim有五种工作模式：命令模式、插入模式、末行模式、可视化模式、末行模式</p><a id="more"></a><h2 id="vim模式"><a href="#vim模式" class="headerlink" title="vim模式"></a>vim模式</h2><blockquote><p>命令模式：刚打开文件的时候、和按下ECS键模式<br>插入模式：按下a、i、o进入文本编辑模式,底线显示INSERT，使用ECS键退出编辑模式</p></blockquote><p><img src="/images/vim-scheme.png" alt="/vim-scheme.png"></p><h2 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim file                   <span class="comment">#文件存在直接打开，文件不存在创建后打开</span></span><br><span class="line">vim file1 file2 [...filen] <span class="comment"># 打开多个文件</span></span><br></pre></td></tr></table></figure><h2 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i   <span class="comment"># 光标之前插入</span></span><br><span class="line">a   <span class="comment"># 光标之后插入</span></span><br><span class="line">o   <span class="comment"># 光标所在行后新增一行</span></span><br><span class="line">I   <span class="comment"># 光标所在行开始处插入</span></span><br><span class="line">A   <span class="comment"># 光标所在行结尾处插入</span></span><br><span class="line">O   <span class="comment"># 光标所在行前新增一行</span></span><br></pre></td></tr></table></figure><h2 id="可视化模式"><a href="#可视化模式" class="headerlink" title="可视化模式"></a>可视化模式</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v       <span class="comment"># 上下左右控制多行选择</span></span><br><span class="line">ctrl v  <span class="comment"># 列块选择</span></span><br></pre></td></tr></table></figure><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><p>在可视化模式（ctrl v 和 v）下，输入y复制选定的字符串，然后可以在命令模式下按下p进行粘贴操作</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yy  <span class="comment"># 复制游标所在一行</span></span><br><span class="line">nyy <span class="comment"># n表示数字，复制游标开始处开始n行</span></span><br><span class="line">p   <span class="comment"># 向下粘贴</span></span><br><span class="line">P   <span class="comment"># 向上粘贴</span></span><br></pre></td></tr></table></figure><h2 id="删除撤回"><a href="#删除撤回" class="headerlink" title="删除撤回"></a>删除撤回</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dd     <span class="comment"># 删除游标所在的一行</span></span><br><span class="line">ndd    <span class="comment"># n表示数字，删除游标开始处开始n行</span></span><br><span class="line">:u     <span class="comment"># 撤回当前操作 </span></span><br><span class="line">ctrl r <span class="comment"># 撤回上一个被撤销操作</span></span><br></pre></td></tr></table></figure><h2 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找</span></span><br><span class="line">/string                     <span class="comment"># 查找字符串string</span></span><br><span class="line">n                           <span class="comment"># 向下查找</span></span><br><span class="line">N                           <span class="comment"># 向上查找</span></span><br><span class="line"><span class="comment"># 替换</span></span><br><span class="line">:s/cur_word/rep_word/       <span class="comment"># 当前行第一个替换</span></span><br><span class="line">:s/cur_word/rep_word/g      <span class="comment"># 当前行所有替换</span></span><br><span class="line">:1,<span class="variable">$s</span>/cur_word/rep_word/g   <span class="comment"># 从第一行开始替换全部</span></span><br><span class="line">:1,<span class="variable">$s</span>/cur_word/rep_word/gc  <span class="comment"># 从第一行开始询问是否替换</span></span><br></pre></td></tr></table></figure><h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:q   <span class="comment"># 未修改退出，修改过文档，不能用此命令退出</span></span><br><span class="line">:q!  <span class="comment"># 强制退出，不保存修改</span></span><br><span class="line">:wq  <span class="comment"># 保存修改退出</span></span><br><span class="line">:w new_file  <span class="comment"># 另存为new_file文件</span></span><br><span class="line">:wq new_file <span class="comment"># 另存为new_file退出</span></span><br></pre></td></tr></table></figure><h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">↑ ↓ ← → <span class="comment"># 方向键</span></span><br><span class="line">k j h l <span class="comment"># 字母键</span></span><br><span class="line">$       <span class="comment"># 当前光标行尾</span></span><br><span class="line">^       <span class="comment"># 当前光标行首、</span></span><br><span class="line">gg      <span class="comment"># 文章行首</span></span><br><span class="line">G       <span class="comment"># 文章行尾</span></span><br><span class="line">ctrl f  <span class="comment"># 向下翻页</span></span><br><span class="line">ctrl b  <span class="comment"># 向上翻页</span></span><br></pre></td></tr></table></figure><h2 id="设置行号"><a href="#设置行号" class="headerlink" title="设置行号"></a>设置行号</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> nu    <span class="comment"># 显示行号</span></span><br><span class="line">:<span class="built_in">set</span> nonu  <span class="comment"># 不显示行号</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vim的基本操作分为打开文件、编辑、复制、粘贴、删除、撤回、查找、替换、保存、另存为。vim有五种工作模式：命令模式、插入模式、末行模式、可视化模式、末行模式&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://www.wchen.club/categories/linux/"/>
    
    
      <category term="linux" scheme="https://www.wchen.club/tags/linux/"/>
    
  </entry>
  
</feed>
